!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
0	../libraries/AceButton/docs/html/search/searchdata.js	/^  0: "All",$/;"	p	class:indexSectionLabels
0	../libraries/AceButton/docs/html/search/searchdata.js	/^  0: "abcefgikrst",$/;"	p	class:indexSectionsWithContent
0	../libraries/AceButton/docs/html/search/searchdata.js	/^  0: "all",$/;"	p	class:indexSectionNames
1	../libraries/AceButton/docs/html/search/searchdata.js	/^  1: "Classes",$/;"	p	class:indexSectionLabels
1	../libraries/AceButton/docs/html/search/searchdata.js	/^  1: "abt",$/;"	p	class:indexSectionsWithContent
1	../libraries/AceButton/docs/html/search/searchdata.js	/^  1: "classes",$/;"	p	class:indexSectionNames
2	../libraries/AceButton/docs/html/search/searchdata.js	/^  2: "Functions",$/;"	p	class:indexSectionLabels
2	../libraries/AceButton/docs/html/search/searchdata.js	/^  2: "abcgirst",$/;"	p	class:indexSectionsWithContent
2	../libraries/AceButton/docs/html/search/searchdata.js	/^  2: "functions",$/;"	p	class:indexSectionNames
3	../libraries/AceButton/docs/html/search/searchdata.js	/^  3: "Variables",$/;"	p	class:indexSectionLabels
3	../libraries/AceButton/docs/html/search/searchdata.js	/^  3: "k",$/;"	p	class:indexSectionsWithContent
3	../libraries/AceButton/docs/html/search/searchdata.js	/^  3: "variables",$/;"	p	class:indexSectionNames
4	../libraries/AceButton/docs/html/search/searchdata.js	/^  4: "Typedefs",$/;"	p	class:indexSectionLabels
4	../libraries/AceButton/docs/html/search/searchdata.js	/^  4: "ef",$/;"	p	class:indexSectionsWithContent
4	../libraries/AceButton/docs/html/search/searchdata.js	/^  4: "typedefs",$/;"	p	class:indexSectionNames
5	../libraries/AceButton/docs/html/search/searchdata.js	/^  5: "Pages"$/;"	p	class:indexSectionLabels
5	../libraries/AceButton/docs/html/search/searchdata.js	/^  5: "a"$/;"	p	class:indexSectionsWithContent
5	../libraries/AceButton/docs/html/search/searchdata.js	/^  5: "pages"$/;"	p	class:indexSectionNames
ACE_BUTTON_ACE_BUTTON_H	../libraries/AceButton/src/ace_button/AceButton.h	/^#define ACE_BUTTON_ACE_BUTTON_H$/;"	M	struct:
ACE_BUTTON_ADJUSTABLE_BUTTON_CONFIG_H	../libraries/AceButton/src/ace_button/AdjustableButtonConfig.h	/^#define ACE_BUTTON_ADJUSTABLE_BUTTON_CONFIG_H$/;"	M	struct:
ACE_BUTTON_BUTTON_CONFIG_H	../libraries/AceButton/src/ace_button/ButtonConfig.h	/^#define ACE_BUTTON_BUTTON_CONFIG_H$/;"	M	struct:
ACE_BUTTON_EVENT_TRACKER_H	../libraries/AceButton/src/ace_button/testing/EventTracker.h	/^#define ACE_BUTTON_EVENT_TRACKER_H$/;"	M	struct:
ACE_BUTTON_H	../libraries/AceButton/src/AceButton.h	/^#define ACE_BUTTON_H$/;"	M	struct:
ACE_BUTTON_INLINE	../libraries/AceButton/src/ace_button/ButtonConfig.h	/^#define ACE_BUTTON_INLINE __attribute__((always_inline))$/;"	M	struct:
ACE_BUTTON_TESTABLE_BUTTON_CONFIG_H	../libraries/AceButton/src/ace_button/testing/TestableButtonConfig.h	/^#define ACE_BUTTON_TESTABLE_BUTTON_CONFIG_H$/;"	M	struct:
ACE_BUTTON_TEST_HELPER_H	../libraries/AceButton/src/ace_button/testing/TestHelper.h	/^#define ACE_BUTTON_TEST_HELPER_H$/;"	M	struct:
ACE_BUTTON_TIMING_STATS_H	../libraries/AceButton/src/ace_button/TimingStats.h	/^#define ACE_BUTTON_TIMING_STATS_H$/;"	M	struct:
ACE_BUTTON_VERSION	../libraries/AceButton/src/AceButton.h	/^#define ACE_BUTTON_VERSION 10301$/;"	M	struct:
ARDUINO_DIR	Makefile	/^ARDUINO_DIR = \/home\/sebastian\/tmp\/downloads\/arduino-1.8.7\/$/;"	m
Activate	../libraries/AceButton/docs/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m	class:SearchBox
Advertise	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Advertise 7$/;"	M	struct:
BLINK	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^enum states_t {ONOFF, TO_BLINK, BLINK, TO_ONOFF};$/;"	e	enum:states_t	file:
BOARD_TAG	Makefile	/^BOARD_TAG    = uno$/;"	m
BUTTON_ID	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^const uint8_t BUTTON_ID = 1;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^const int BUTTON_PIN = 2;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^const int BUTTON_PIN = 7;$/;"	v
BUTTON_PIN	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^const uint8_t BUTTON_PIN = 2;$/;"	v
Busy	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Busy 1$/;"	M	struct:
ButtonId	tonuino.ino	/^enum ButtonId {$/;"	g	file:
ButtonStart	tonuino.ino	/^    ButtonStart = 0,$/;"	e	enum:ButtonId	file:
ButtonVolDown	tonuino.ino	/^    ButtonVolDown$/;"	e	enum:ButtonId	file:
ButtonVolUp	tonuino.ino	/^    ButtonVolUp,$/;"	e	enum:ButtonId	file:
CLICKDELAY	tonuino.ino	13;"	d	file:
COMMON_ANODE	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	80;"	d	file:
COUNTER_H	include/Counter.h	/^#define COUNTER_H$/;"	M	interface:
CapacitiveConfig	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^    CapacitiveConfig(CapacitiveSensor& sensor):$/;"	f	class:CapacitiveConfig
CapacitiveConfig	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^class CapacitiveConfig: public ButtonConfig {$/;"	c	file:
CheckSumNotMatch	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define CheckSumNotMatch 4$/;"	M	struct:
CloseResultsWindow	../libraries/AceButton/docs/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m	class:SearchBox
CloseSelectionWindow	../libraries/AceButton/docs/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m	class:SearchBox
DEBUG	tonuino.ino	5;"	d	file:
DELAY	include/debug.h	/^#define DELAY(...)          delay(__VA_ARGS__);$/;"	M	struct:
DELAY	include/debug.h	/^#define DELAY(...)$/;"	M	struct:
DEPRECATED	../libraries/MFRC522/src/deprecated.h	/^#define DEPRECATED [[deprecated]]$/;"	M	struct:
DEPRECATED	../libraries/MFRC522/src/deprecated.h	/^#define DEPRECATED __attribute__((deprecated))$/;"	M	struct:
DEPRECATED_H	../libraries/MFRC522/src/deprecated.h	/^#define DEPRECATED_H$/;"	M	struct:
DEPRECATED_MSG	../libraries/MFRC522/src/deprecated.h	/^#define DEPRECATED_MSG(msg) [[deprecated(msg)]]$/;"	M	struct:
DEPRECATED_MSG	../libraries/MFRC522/src/deprecated.h	/^#define DEPRECATED_MSG(msg) __attribute__((deprecated(msg)))$/;"	M	struct:
DFPLAYER_DEVICE_AUX	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_DEVICE_AUX 3$/;"	M	struct:
DFPLAYER_DEVICE_FLASH	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_DEVICE_FLASH 5$/;"	M	struct:
DFPLAYER_DEVICE_SD	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_DEVICE_SD 2$/;"	M	struct:
DFPLAYER_DEVICE_SLEEP	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_DEVICE_SLEEP 4$/;"	M	struct:
DFPLAYER_DEVICE_U_DISK	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_DEVICE_U_DISK 1$/;"	M	struct:
DFPLAYER_EQ_BASS	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_BASS 5$/;"	M	struct:
DFPLAYER_EQ_CLASSIC	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_CLASSIC 4$/;"	M	struct:
DFPLAYER_EQ_JAZZ	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_JAZZ 3$/;"	M	struct:
DFPLAYER_EQ_NORMAL	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_NORMAL 0$/;"	M	struct:
DFPLAYER_EQ_POP	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_POP 1$/;"	M	struct:
DFPLAYER_EQ_ROCK	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_EQ_ROCK 2$/;"	M	struct:
DFPLAYER_RECEIVED_LENGTH	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_RECEIVED_LENGTH 10$/;"	M	struct:
DFPLAYER_SEND_LENGTH	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPLAYER_SEND_LENGTH 10$/;"	M	struct:
DFPlayerCardInserted	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerCardInserted 2$/;"	M	struct:
DFPlayerCardOnline	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerCardOnline 4$/;"	M	struct:
DFPlayerCardRemoved	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerCardRemoved 3$/;"	M	struct:
DFPlayerCardUSBOnline	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerCardUSBOnline 10$/;"	M	struct:
DFPlayerError	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerError 6$/;"	M	struct:
DFPlayerFeedBack	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerFeedBack 11$/;"	M	struct:
DFPlayerPlayFinished	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerPlayFinished 5$/;"	M	struct:
DFPlayerUSBInserted	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerUSBInserted 7$/;"	M	struct:
DFPlayerUSBOnline	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerUSBOnline 9$/;"	M	struct:
DFPlayerUSBRemoved	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define DFPlayerUSBRemoved 8$/;"	M	struct:
DFRobotDFPlayerMini_cpp	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^    #define DFRobotDFPlayerMini_cpp$/;"	M	struct:
DOMPopupSearchResults	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m	class:SearchBox
DOMPopupSearchResultsWindow	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m	class:SearchBox
DOMSearchBox	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m	class:SearchBox
DOMSearchClose	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m	class:SearchBox
DOMSearchField	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m	class:SearchBox
DOMSearchSelect	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m	class:SearchBox
DOMSearchSelectWindow	../libraries/AceButton/docs/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m	class:SearchBox
DPRINT	include/debug.h	/^#define DPRINT(...)         Serial.print(__VA_ARGS__); Serial.flush();$/;"	M	struct:
DPRINT	include/debug.h	/^#define DPRINT(...)$/;"	M	struct:
DPRINTF	include/debug.h	/^#define DPRINTF(...)        Serial.print(F(__VA_ARGS__)); Serial.flush();$/;"	M	struct:
DPRINTF	include/debug.h	/^#define DPRINTF(...)$/;"	M	struct:
DPRINTLN	include/debug.h	/^#define DPRINTLN(...)       Serial.println(__VA_ARGS__); Serial.flush();$/;"	M	struct:
DPRINTLN	include/debug.h	/^#define DPRINTLN(...)$/;"	M	struct:
DPRINTLNF	include/debug.h	/^#define DPRINTLNF(...)      Serial.println(F(__VA_ARGS__)); Serial.flush();$/;"	M	struct:
DPRINTLNF	include/debug.h	/^#define DPRINTLNF(...)$/;"	M	struct:
DVPRINTLNF	include/debug.h	/^#define DVPRINTLNF(...)     Serial.print(F(#__VA_ARGS__" = ")); Serial.println(__VA_ARGS__); Serial.flush();$/;"	M	struct:
DVPRINTLNF	include/debug.h	/^#define DVPRINTLNF(...)$/;"	M	struct:
FM_FREQ_DELTA	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const uint16_t FM_FREQ_DELTA = 2; \/\/ 0.2 MHz increments in USA$/;"	v
FM_FREQ_MAX	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const uint16_t FM_FREQ_MAX = 1079; \/\/ 107.9 MHz$/;"	v
FM_FREQ_MIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const uint16_t FM_FREQ_MIN = 879; \/\/ 87.9 MHz$/;"	v
FileIndexOut	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define FileIndexOut 5$/;"	M	struct:
FileMismatch	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define FileMismatch 6$/;"	M	struct:
FindChildElement	../libraries/AceButton/docs/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m	class:SearchResults
INITIALVOLUME	include/Mp3Player.h	/^#define INITIALVOLUME 2 \/\/ 0-30$/;"	M	interface:
IRQ_PIN	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^constexpr uint8_t IRQ_PIN = 2;     \/\/ Configurable, depends on hardware$/;"	v
JC_BUTTON_H_INCLUDED	../libraries/JC_Button/src/JC_Button.h	/^#define JC_BUTTON_H_INCLUDED$/;"	M	struct:
LED_OFF	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^const int LED_OFF = LOW;$/;"	v
LED_OFF	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	84;"	d	file:
LED_OFF	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	87;"	d	file:
LED_ON	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^const int LED_ON = HIGH;$/;"	v
LED_ON	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	83;"	d	file:
LED_ON	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	86;"	d	file:
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^  const int LED_PIN = LED_BUILTIN;$/;"	v
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^  const int LED_PIN = LED_BUILTIN;$/;"	v
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^  const int LED_PIN = LED_BUILTIN;$/;"	v
LED_PIN	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^  const int LED_PIN = LED_BUILTIN;$/;"	v
LED_PIN	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^  const int LED_PIN = 2;$/;"	v
LED_PIN	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^  const int LED_PIN = LED_BUILTIN;$/;"	v
LONGPRESS	tonuino.ino	12;"	d	file:
LOOP_MODE_CLICK	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_CLICK = 3;$/;"	v
LOOP_MODE_DOUBLE_CLICK	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_DOUBLE_CLICK = 4;$/;"	v
LOOP_MODE_END	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_END = 6;$/;"	v
LOOP_MODE_IDLE	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_IDLE = 1;$/;"	v
LOOP_MODE_LONG_PRESS	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_LONG_PRESS = 5;$/;"	v
LOOP_MODE_PRESS_RELEASE	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_PRESS_RELEASE = 2;$/;"	v
LOOP_MODE_START	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const uint8_t LOOP_MODE_START = 0;$/;"	v
MAXALLOWEDVOLUME	include/Mp3Player.h	/^#define MAXALLOWEDVOLUME 24 \/\/ 0-30$/;"	M	interface:
MFRC522Debug_h	../libraries/MFRC522/src/MFRC522Debug.h	/^#define MFRC522Debug_h$/;"	M	struct:
MFRC522Extended_h	../libraries/MFRC522/src/MFRC522Extended.h	/^#define MFRC522Extended_h$/;"	M	struct:
MFRC522HACK_H	../libraries/MFRC522/src/MFRC522Hack.h	/^#define MFRC522HACK_H$/;"	M	struct:
MFRC522_h	../libraries/MFRC522/src/MFRC522.h	/^#define MFRC522_h$/;"	M	struct:
MONITOR_BAUDRATE	Makefile	/^MONITOR_BAUDRATE = 115200$/;"	m
MONITOR_PORT	Makefile	/^MONITOR_PORT = \/dev\/ttyACM0$/;"	m
MP3NOTIFIER_H	include/Mp3Notifier.h	/^#define MP3NOTIFIER_H$/;"	M	struct:
MP3PLAYER_H	include/Mp3Player.h	/^#define MP3PLAYER_H$/;"	M	interface:
Mp3Notify	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^class Mp3Notify$/;"	c	file:
Mp3Notify	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^class Mp3Notify$/;"	c	file:
Mp3Notify	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^class Mp3Notify$/;"	c	file:
NR_KNOWN_KEYS	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^constexpr uint8_t NR_KNOWN_KEYS = 8;$/;"	v
NR_KNOWN_KEYS	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^constexpr uint8_t NR_KNOWN_KEYS = 8;$/;"	v
NR_OF_READERS	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^constexpr uint8_t NR_OF_READERS = 2;$/;"	v
NUM_PRESETS	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int NUM_PRESETS = 3;$/;"	v
Nav	../libraries/AceButton/docs/html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m	class:SearchResults
NavChild	../libraries/AceButton/docs/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m	class:SearchResults
NavNext	../libraries/AceButton/docs/html/search/search.js	/^    this.NavNext = function(index)$/;"	m	class:SearchResults
NavPrev	../libraries/AceButton/docs/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m	class:SearchResults
ONOFF	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^enum states_t {ONOFF, TO_BLINK, BLINK, TO_ONOFF};$/;"	e	enum:states_t	file:
OnCardInserted	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^  static void OnCardInserted(uint16_t code)$/;"	f	class:Mp3Notify
OnCardInserted	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^  static void OnCardInserted(uint16_t code)$/;"	f	class:Mp3Notify
OnCardInserted	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^  static void OnCardInserted(uint16_t code)$/;"	f	class:Mp3Notify
OnCardOnline	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^  static void OnCardOnline(uint16_t code)$/;"	f	class:Mp3Notify
OnCardOnline	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^  static void OnCardOnline(uint16_t code)$/;"	f	class:Mp3Notify
OnCardOnline	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^  static void OnCardOnline(uint16_t code)$/;"	f	class:Mp3Notify
OnCardRemoved	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^  static void OnCardRemoved(uint16_t code)$/;"	f	class:Mp3Notify
OnCardRemoved	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^  static void OnCardRemoved(uint16_t code)$/;"	f	class:Mp3Notify
OnCardRemoved	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^  static void OnCardRemoved(uint16_t code)$/;"	f	class:Mp3Notify
OnError	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^  static void OnError(uint16_t errorCode)$/;"	f	class:Mp3Notify
OnError	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^  static void OnError(uint16_t errorCode)$/;"	f	class:Mp3Notify
OnError	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^  static void OnError(uint16_t errorCode)$/;"	f	class:Mp3Notify
OnPlayFinished	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^  static void OnPlayFinished(uint16_t track)$/;"	f	class:Mp3Notify
OnPlayFinished	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^  static void OnPlayFinished(uint16_t globalTrack)$/;"	f	class:Mp3Notify
OnPlayFinished	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^  static void OnPlayFinished(uint16_t track)$/;"	f	class:Mp3Notify
OnSearchFieldChange	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m	class:SearchBox
OnSearchFieldFocus	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m	class:SearchBox
OnSearchSelectHide	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m	class:SearchBox
OnSearchSelectKey	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m	class:SearchBox
OnSearchSelectShow	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m	class:SearchBox
OnSelectItem	../libraries/AceButton/docs/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m	class:SearchBox
PIN	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^const uint8_t PIN = 13;$/;"	v
PRESET_1_PIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int PRESET_1_PIN = 6;$/;"	v
PRESET_2_PIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int PRESET_2_PIN = 5;$/;"	v
PRESET_3_PIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int PRESET_3_PIN = 4;$/;"	v
PROFILING_BUTTON_CONFIG_H	../libraries/AceButton/examples/AutoBenchmark/ProfilingButtonConfig.h	/^#define PROFILING_BUTTON_CONFIG_H$/;"	M	struct:
ProcessKeys	../libraries/AceButton/docs/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m	class:SearchResults
REQUIRE_CPP11_H	../libraries/MFRC522/src/require_cpp11.h	/^#define REQUIRE_CPP11_H$/;"	M	struct:
RFIDMODECLICKS	tonuino.ino	14;"	d	file:
RFIDREADER_H	include/RfidReader.h	/^#define RFIDREADER_H$/;"	M	interface:
RST_PIN	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/DumpInfo/DumpInfo.ino	/^constexpr uint8_t RST_PIN = 9;          \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/Ntag216_AUTH/Ntag216_AUTH.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/firmware_check/firmware_check.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/rfid_read_personal_data/rfid_read_personal_data.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RST_PIN	../libraries/MFRC522/examples/rfid_write_personal_data/rfid_write_personal_data.ino	/^constexpr uint8_t RST_PIN = 9;     \/\/ Configurable, see typical pin layout above$/;"	v
RfidCard	include/RfidReader.h	/^struct RfidCard {$/;"	s	interface:
SERIALBEGIN	include/debug.h	/^#define SERIALBEGIN(...)    Serial.begin(__VA_ARGS__);$/;"	M	struct:
SERIALBEGIN	include/debug.h	/^#define SERIALBEGIN(...)$/;"	M	struct:
SS_1_PIN	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^constexpr uint8_t SS_1_PIN = 10;   \/\/ Configurable, take a unused pin, only HIGH\/LOW required, must be diffrent to SS 2$/;"	v
SS_2_PIN	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^constexpr uint8_t SS_2_PIN = 8;    \/\/ Configurable, take a unused pin, only HIGH\/LOW required, must be diffrent to SS 1$/;"	v
SS_PIN	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/DumpInfo/DumpInfo.ino	/^constexpr uint8_t SS_PIN = 10;         \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/Ntag216_AUTH/Ntag216_AUTH.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/firmware_check/firmware_check.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/rfid_read_personal_data/rfid_read_personal_data.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
SS_PIN	../libraries/MFRC522/examples/rfid_write_personal_data/rfid_write_personal_data.ino	/^constexpr uint8_t SS_PIN = 10;     \/\/ Configurable, see typical pin layout above$/;"	v
STATS_PRINT_INTERVAL	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^const unsigned long STATS_PRINT_INTERVAL = 2000;$/;"	v
STOPWATCH_INIT	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^const uint8_t STOPWATCH_INIT = 0;$/;"	v
STOPWATCH_STARTED	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^const uint8_t STOPWATCH_STARTED = 1;$/;"	v
STOPWATCH_STOPPED	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^const uint8_t STOPWATCH_STOPPED = 2;$/;"	v
Search	../libraries/AceButton/docs/html/search/search.js	/^    this.Search = function(search)$/;"	m	class:SearchResults
Search	../libraries/AceButton/docs/html/search/search.js	/^  this.Search = function()$/;"	m	class:SearchBox
SearchBox	../libraries/AceButton/docs/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchResults	../libraries/AceButton/docs/html/search/search.js	/^function SearchResults(name)$/;"	c
SelectItemCount	../libraries/AceButton/docs/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m	class:SearchBox
SelectItemSet	../libraries/AceButton/docs/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m	class:SearchBox
SerialWrongStack	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define SerialWrongStack 3$/;"	M	struct:
ShowReaderDetails	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void ShowReaderDetails() {$/;"	f
Sleeping	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Sleeping 2$/;"	M	struct:
Stack_ACK	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_ACK 4$/;"	M	struct:
Stack_CheckSum	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_CheckSum 7$/;"	M	struct:
Stack_Command	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_Command 3$/;"	M	struct:
Stack_End	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_End 9$/;"	M	struct:
Stack_Header	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_Header 0$/;"	M	struct:
Stack_Length	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_Length 2$/;"	M	struct:
Stack_Parameter	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_Parameter 5$/;"	M	struct:
Stack_Version	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define Stack_Version 1$/;"	M	struct:
TIMEOUT_MILLIS	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^static const unsigned long TIMEOUT_MILLIS = 10;$/;"	v	file:
TO_BLINK	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^enum states_t {ONOFF, TO_BLINK, BLINK, TO_ONOFF};$/;"	e	enum:states_t	file:
TO_ONOFF	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^enum states_t {ONOFF, TO_BLINK, BLINK, TO_ONOFF};$/;"	e	enum:states_t	file:
TUNE_DOWN_PIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int TUNE_DOWN_PIN = 3;$/;"	v
TUNE_UP_PIN	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^const int TUNE_UP_PIN = 2;$/;"	v
TimeOut	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define TimeOut 0$/;"	M	struct:
Toggle	../libraries/AceButton/docs/html/search/search.js	/^    this.Toggle = function(id)$/;"	m	class:SearchResults
USE_ACE_BUTTON	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	13;"	d	file:
USE_AUNIT	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	51;"	d	file:
WrongStack	../libraries/DFRobotDFPlayerMini/DFRobotDFPlayerMini.h	/^#define WrongStack 1$/;"	M	struct:
activateRec	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void activateRec(MFRC522 mfrc522) {$/;"	f
allEventsEnabled	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^bool allEventsEnabled = false;$/;"	v
bNewInt	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^volatile bool bNewInt = false;$/;"	v
begin	include/RfidReader.h	/^void RfidReader::begin() {$/;"	f	struct:RfidCard
block	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^byte block;$/;"	v
blueLed	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t blueLed = 5;$/;"	v
buffer	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^byte buffer[18];$/;"	v
button	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^AceButton button;$/;"	v
button	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^AceButton button;$/;"	v
buttonConfig	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^AceButton button(&buttonConfig);$/;"	v
buttonConfig	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^ProfilingButtonConfig buttonConfig;$/;"	v
buttonConfig	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^AceButton button(&buttonConfig);$/;"	v
buttonConfig	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^ButtonConfig buttonConfig;$/;"	v
buttonVolDown	tonuino.ino	/^AceButton buttonVolDown;$/;"	v
buttonVolUp	tonuino.ino	/^AceButton buttonVolUp;$/;"	v
checkButtons	tonuino.ino	/^void checkButtons() {$/;"	f
checkTwo	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^bool checkTwo ( byte a[], byte b[] ) {   $/;"	f
children	../libraries/AceButton/docs/html/menudata.js	/^var menudata={children:[$/;"	p	class:menudata
choice	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^char choice;$/;"	v
clearInt	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void clearInt(MFRC522 mfrc522) {$/;"	f
closeCard	include/RfidReader.h	/^void RfidReader::closeCard() {$/;"	f	struct:RfidCard
convertToId	../libraries/AceButton/docs/html/search/search.js	/^function convertToId(search)$/;"	f
cookie	include/RfidReader.h	/^    uint32_t cookie;    \/\/ 4 Byte$/;"	F	struct:RfidCard
createResults	../libraries/AceButton/docs/html/search/search.js	/^function createResults()$/;"	f
currentStation	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^uint16_t currentStation = FM_FREQ_MIN;$/;"	v
cycleLeds	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void cycleLeds() {$/;"	f
decreaseVolume	include/Mp3Player.h	/^inline void Mp3Player::decreaseVolume() {$/;"	f	interface:
deleteID	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void deleteID( byte a[] ) {$/;"	f
denied	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void denied() {$/;"	f
details	../libraries/AceButton/docs/html/classace__button_1_1AceButton.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	../libraries/AceButton/docs/html/classace__button_1_1AdjustableButtonConfig.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	../libraries/AceButton/docs/html/classace__button_1_1TimingStats.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
disableAllEvents	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^void disableAllEvents() {$/;"	f
disableButtonFeatures	tonuino.ino	/^void disableButtonFeatures() {$/;"	f
dumpByteArray	include/RfidReader.h	/^void RfidReader::dumpByteArray(byte *buffer, byte bufferSize) {$/;"	f	struct:RfidCard
dump_byte_array	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^void dump_byte_array(byte *buffer, byte bufferSize) {$/;"	f
dump_byte_array1	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void dump_byte_array1(byte *buffer, byte bufferSize) {$/;"	f
enableAllEvents	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^void enableAllEvents() {$/;"	f
enableButtonFeatures	tonuino.ino	/^void enableButtonFeatures() {$/;"	f
eventTracker	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^EventTracker eventTracker;$/;"	v
failedWrite	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void failedWrite() {$/;"	f
fastBlink	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^void fastBlink()$/;"	f
findID	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^bool findID( byte find[] ) {$/;"	f
findIDSLOT	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^uint8_t findIDSLOT( byte find[] ) {$/;"	f
folder	include/RfidReader.h	/^    uint8_t folder;     \/\/ 1 Byte$/;"	F	struct:RfidCard
formatValueBlock	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^void formatValueBlock(byte blockAddr) {$/;"	f
getID	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^uint8_t getID() {$/;"	f
getXPos	../libraries/AceButton/docs/html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	../libraries/AceButton/docs/html/search/search.js	/^function getYPos(item)$/;"	f
granted	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void granted ( uint16_t setDelay) {$/;"	f
greenLed	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t greenLed = 6;$/;"	v
handleEvent	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleEvent	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^void handleEvent(AceButton* \/* button *\/, uint8_t eventType,$/;"	f
handleMp3PlayerButtons	tonuino.ino	/^void handleMp3PlayerButtons(AceButton* button, uint8_t eventType, uint8_t \/* buttonState *\/) {$/;"	f
handlePresetEvent	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void handlePresetEvent(AceButton* button, uint8_t eventType,$/;"	f
handleRfidCardButtons	tonuino.ino	/^void handleRfidCardButtons(AceButton* button, uint8_t eventType, uint8_t \/* buttonState *\/) {$/;"	f
handleTuneEvent	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void handleTuneEvent(AceButton* button, uint8_t eventType,$/;"	f
helper	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^TestHelper helper(&testableConfig, &button, &eventTracker);$/;"	v
increaseVolume	include/Mp3Player.h	/^inline void Mp3Player::increaseVolume() {$/;"	f	interface:
inherited	../libraries/AceButton/docs/html/classace__button_1_1AdjustableButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
initMenu	../libraries/AceButton/docs/html/menu.js	/^function initMenu(relPath,searchEnabled,serverSide,searchPage,search) {$/;"	f
initStations	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void initStations() {$/;"	f
init_search	../libraries/AceButton/docs/html/search/search.js	/^function init_search()$/;"	f
innerLoopCounter	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^uint16_t innerLoopCounter = 0;$/;"	v
isMaster	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^bool isMaster( byte test[] ) {$/;"	f
isModeMp3Player	tonuino.ino	/^bool Mp3Notifier::isModeMp3Player = true;$/;"	m	class:Mp3Notifier	file:
isNewRfidCardPresent	include/RfidReader.h	/^bool RfidReader::isNewRfidCardPresent() {$/;"	f	struct:RfidCard
isTrackFinished	tonuino.ino	/^bool Mp3Notifier::isTrackFinished = false;$/;"	m	class:Mp3Notifier	file:
kSamples	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^    static const uint8_t kSamples = 30;$/;"	m	class:CapacitiveConfig	file:
kTouchThreshold	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^    static const long kTouchThreshold = 100;$/;"	m	class:CapacitiveConfig	file:
keuze1	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void keuze1(){ \/\/Read card$/;"	f
keuze2	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void keuze2(){ \/\/Test waardes in blokken$/;"	f
keuze3	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void keuze3(){ \/\/Copy the data in the new card$/;"	f
key	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^MFRC522::MIFARE_Key key;$/;"	v
key	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^MFRC522::MIFARE_Key key; $/;"	v
knownKeys	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^byte knownKeys[NR_KNOWN_KEYS][MFRC522::MF_KEY_SIZE] =  {$/;"	v
knownKeys	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^byte knownKeys[NR_KNOWN_KEYS][MFRC522::MF_KEY_SIZE] =  {$/;"	v
l00001	../libraries/AceButton/docs/html/AceButton_8cpp_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &quot;TimingStats.h&quot;<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;AceButton.h&quot;<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/ Check that the Arduino constants HIGH and LOW are defined to be 1 and 0,<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment">\/\/ respectively. Otherwise, this library won&#39;t work.<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#if HIGH != 1<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">  #error HIGH must be defined to be 1<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">#if LOW != 0<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">  #error LOW must be defined to be 0<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">   39<\/a><\/span>&#160;<a class="code" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">AceButton::AceButton<\/a>(uint8_t pin, uint8_t defaultReleasedState, uint8_t <span class="keywordtype">id<\/span>):<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    mButtonConfig(<a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>::getSystemButtonConfig()) {<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;  <a class="code" href="classace__button_1_1AceButton.html#a18c47304c694c6f084a343a7c83bef34">init<\/a>(pin, defaultReleasedState, <span class="keywordtype">id<\/span>);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;}<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#ab2ec2d3b98e2e2228f85271385e07521">   44<\/a><\/span>&#160;<a class="code" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">AceButton::AceButton<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* buttonConfig):<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    mButtonConfig(buttonConfig) {<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;  <a class="code" href="classace__button_1_1AceButton.html#a18c47304c694c6f084a343a7c83bef34">init<\/a>(0, HIGH, 0);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;}<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a18c47304c694c6f084a343a7c83bef34">   49<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#a18c47304c694c6f084a343a7c83bef34">AceButton::init<\/a>(uint8_t pin, uint8_t defaultReleasedState, uint8_t <span class="keywordtype">id<\/span>) {<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;  mPin = pin;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  mId = id;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;  mFlags = 0;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;  mLastButtonState = <a class="code" href="classace__button_1_1AceButton.html#afe8e8e22146f510afa487e6ec98b6253">kButtonStateUnknown<\/a>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;  mLastDebounceTime = 0;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;  mLastClickTime = 0;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;  setDefaultReleasedState(defaultReleasedState);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;}<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::setDefaultReleasedState(uint8_t state) {<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;  <span class="keywordflow">if<\/span> (state == HIGH) {<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;    mFlags |= kFlagDefaultReleasedState;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;    mFlags &amp;= ~kFlagDefaultReleasedState;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;  }<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;}<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">   67<\/a><\/span>&#160;uint8_t <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">AceButton::getDefaultReleasedState<\/a>() {<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;  <span class="keywordflow">return<\/span> (mFlags &amp; kFlagDefaultReleasedState) ? HIGH : LOW;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;}<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="comment">\/\/ NOTE: It would be interesting to rewrite the check() method using a Finite<\/span><\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment">\/\/ State Machine.<\/span><\/div><div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#af710048a654fa5d5e45405661282a7b1">   73<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#af710048a654fa5d5e45405661282a7b1">AceButton::check<\/a>() {<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  <span class="comment">\/\/ Get the micros.<\/span><\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;  uint16_t nowMicros = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a8a74d1a1c082bfb0e4ddf55e67d3ac2d">getClockMicros<\/a>();<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;  <span class="comment">\/\/ Retrieve the current time just once and use that in the various checkXxx()<\/span><\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  <span class="comment">\/\/ functions below. This provides some robustness of the various timing<\/span><\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  <span class="comment">\/\/ algorithms even if any of the event handlers takes more time than the<\/span><\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;  <span class="comment">\/\/ threshold time limits such as &#39;debounceDelay&#39; or longPressDelay&#39;.<\/span><\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;  uint16_t now = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a440271e22d5e7e161cdcb3b73f092111">getClock<\/a>();<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;  uint8_t buttonState = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a5dab877bf124bfdf5a5eb703ca123027">readButton<\/a>(mPin);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;  <span class="comment">\/\/ debounce the button<\/span><\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  <span class="keywordflow">if<\/span> (checkDebounced(now, buttonState)) {<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;    <span class="comment">\/\/ check if the button was initialized (i.e. UNKNOWN state)<\/span><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    <span class="keywordflow">if<\/span> (checkInitialized(buttonState)) {<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;      checkEvent(now, buttonState);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;  <a class="code" href="classace__button_1_1TimingStats.html">TimingStats<\/a>* stats = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aff7101f2fe0f0c3bba67924b01e9d493">getTimingStats<\/a>();<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  <span class="keywordflow">if<\/span> (stats != <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    uint16_t elapsedMicros = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a8a74d1a1c082bfb0e4ddf55e67d3ac2d">getClockMicros<\/a>() - nowMicros;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;    stats-&gt;update(elapsedMicros);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  }<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;}<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkEvent(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  <span class="comment">\/\/ We need to remove orphaned clicks even if just Click is enabled. It is not<\/span><\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  <span class="comment">\/\/ sufficient to do this for just DoubleClick. That&#39;s because it&#39;s possible<\/span><\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  <span class="comment">\/\/ for a Clicked event to be generated, then 65.536 seconds later, the<\/span><\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  <span class="comment">\/\/ ButtonConfig could be changed to enable DoubleClick. (Such real-time change<\/span><\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;  <span class="comment">\/\/ of ButtonConfig is not recommended, but is sometimes convenient.) If the<\/span><\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  <span class="comment">\/\/ orphaned click is not cleared, then the next Click would be errorneously<\/span><\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;  <span class="comment">\/\/ considered to be a DoubleClick. Therefore, we must clear the orphaned click<\/span><\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  <span class="comment">\/\/ even if just the Clicked event is enabled.<\/span><\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;  <span class="comment">\/\/<\/span><\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  <span class="comment">\/\/ We also need to check of any postponed clicks that got generated when<\/span><\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;  <span class="comment">\/\/ kFeatureSuppressClickBeforeDoubleClick was enabled.<\/span><\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#ac662555100416c4843c6ee5156699c56">ButtonConfig::kFeatureClick<\/a>) ||<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;      mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a638943c127dd60288a83e83260825d01">ButtonConfig::kFeatureDoubleClick<\/a>)) {<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;    checkPostponedClick(now);<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;    checkOrphanedClick(now);<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;  }<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a4d175560047a4ca245186fb26fa413f2">ButtonConfig::kFeatureLongPress<\/a>)) {<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;    checkLongPress(now, buttonState);<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;  }<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#ac9b941ca87f0eeb899ed503481439c92">ButtonConfig::kFeatureRepeatPress<\/a>)) {<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;    checkRepeatPress(now, buttonState);<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;  }<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;  <span class="keywordflow">if<\/span> (buttonState != <a class="code" href="classace__button_1_1AceButton.html#a3c49e9edf8cbb5e3800c5f4506d0beca">getLastButtonState<\/a>()) {<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;    checkChanged(now, buttonState);<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;  }<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;}<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<span class="keywordtype">bool<\/span> AceButton::checkDebounced(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;  <span class="keywordflow">if<\/span> (isDebouncing()) {<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;    <span class="comment">\/\/ NOTE: This is a bit tricky. The elapsedTime will be valid even if the<\/span><\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    <span class="comment">\/\/ uint16_t representation of &#39;now&#39; rolls over so that (now &lt;<\/span><\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;    <span class="comment">\/\/ mLastDebounceTime). This is true as long as the &#39;unsigned long&#39;<\/span><\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;    <span class="comment">\/\/ representation of &#39;now&#39; is &lt; (65536 + mLastDebounceTime). We need to cast<\/span><\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;    <span class="comment">\/\/ this expression into an uint16_t before doing the &#39;&gt;=&#39; comparison below<\/span><\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;    <span class="comment">\/\/ for compatability with processors whose sizeof(int) == 4 instead of 2.<\/span><\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;    <span class="comment">\/\/ For those processors, the expression (now - mLastDebounceTime &gt;=<\/span><\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;    <span class="comment">\/\/ getDebounceDelay()) won&#39;t work because the terms in the expression get<\/span><\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;    <span class="comment">\/\/ promoted to an (int).<\/span><\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;    uint16_t elapsedTime = now - mLastDebounceTime;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;    <span class="keywordtype">bool<\/span> isDebouncingTimeOver =<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;        (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#ad7be58d0fe0b242f78f15319d201a565">getDebounceDelay<\/a>());<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;    <span class="keywordflow">if<\/span> (isDebouncingTimeOver) {<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;      clearDebouncing();<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;      <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;    } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;      <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;    }<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;  } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;    <span class="comment">\/\/ Currently not in debouncing phase. Check for a button state change. This<\/span><\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;    <span class="comment">\/\/ will also detect a transition from kButtonStateUnknown to HIGH or LOW.<\/span><\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;    <span class="keywordflow">if<\/span> (buttonState == <a class="code" href="classace__button_1_1AceButton.html#a3c49e9edf8cbb5e3800c5f4506d0beca">getLastButtonState<\/a>()) {<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;      <span class="comment">\/\/ no change, return immediately<\/span><\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;      <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;    }<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;    <span class="comment">\/\/ button has changed so, enter debouncing phase<\/span><\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;    setDebouncing();<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;    mLastDebounceTime = now;<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;  }<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;}<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;<span class="keywordtype">bool<\/span> AceButton::checkInitialized(uint16_t buttonState) {<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;  <span class="keywordflow">if<\/span> (mLastButtonState != <a class="code" href="classace__button_1_1AceButton.html#afe8e8e22146f510afa487e6ec98b6253">kButtonStateUnknown<\/a>) {<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;    <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;  }<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;  <span class="comment">\/\/ If transitioning from the initial &quot;unknown&quot; button state, just set the last<\/span><\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;  <span class="comment">\/\/ valid button state, but don&#39;t fire off the event handler. This handles the<\/span><\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;  <span class="comment">\/\/ case where a momentary switch is pressed down, then the board is rebooted.<\/span><\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;  <span class="comment">\/\/ When the board comes up, it should not fire off the event handler. This<\/span><\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;  <span class="comment">\/\/ also handles the case of a 2-position switch set to the &quot;pressed&quot;<\/span><\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;  <span class="comment">\/\/ position, and the board is rebooted.<\/span><\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;  mLastButtonState = buttonState;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;  <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;}<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkLongPress(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;  <span class="keywordflow">if<\/span> (buttonState == <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>()) {<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;  }<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;  <span class="keywordflow">if<\/span> (isPressed() &amp;&amp; !isLongPressed()) {<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;    uint16_t elapsedTime = now - mLastPressTime;<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;    <span class="keywordflow">if<\/span> (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a46d4213a827a94bf82ba99a9c2e59531">getLongPressDelay<\/a>()) {<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;      setLongPressed();<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;      handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a769599d288f64dc0e55a69184596d804">kEventLongPressed<\/a>);<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;    }<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;  }<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;}<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkRepeatPress(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;  <span class="keywordflow">if<\/span> (buttonState == <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>()) {<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;  }<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;  <span class="keywordflow">if<\/span> (isPressed()) {<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;    <span class="keywordflow">if<\/span> (isRepeatPressed()) {<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;      uint16_t elapsedTime = now - mLastRepeatPressTime;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;      <span class="keywordflow">if<\/span> (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aec4a97a1a1306b9ff12f1cdf44515c43">getRepeatPressInterval<\/a>()) {<\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;        handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a9c4195cb128da40677ea223eb81743c9">kEventRepeatPressed<\/a>);<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;        mLastRepeatPressTime = now;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;      }<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;    } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;      uint16_t elapsedTime = now - mLastPressTime;<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;      <span class="keywordflow">if<\/span> (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#ad85c75d2a2dd200552a181fb154d5fd2">getRepeatPressDelay<\/a>()) {<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;        setRepeatPressed();<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;        <span class="comment">\/\/ Trigger the RepeatPressed immedidately, instead of waiting until the<\/span><\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;        <span class="comment">\/\/ first getRepeatPressInterval() has passed.<\/span><\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;        handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a9c4195cb128da40677ea223eb81743c9">kEventRepeatPressed<\/a>);<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;        mLastRepeatPressTime = now;<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;      }<\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;    }<\/div><div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;  }<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;}<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkChanged(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;  mLastButtonState = buttonState;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;  checkPressed(now, buttonState);<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;  checkReleased(now, buttonState);<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;}<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;<\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkPressed(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;  <span class="keywordflow">if<\/span> (buttonState == <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>()) {<\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;  }<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;  <span class="comment">\/\/ button was pressed<\/span><\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;  mLastPressTime = now;<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;  setPressed();<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;  handleEvent(<a class="code" href="classace__button_1_1AceButton.html#ae723d826fe219a8415764b9fed5d8976">kEventPressed<\/a>);<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;}<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkReleased(uint16_t now, uint8_t buttonState) {<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;  <span class="keywordflow">if<\/span> (buttonState != <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>()) {<\/div><div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;  }<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;  <span class="comment">\/\/ Check for click (before sending off the Released event).<\/span><\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;  <span class="comment">\/\/ Make sure that we don&#39;t clearPressed() before calling this.<\/span><\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#ac662555100416c4843c6ee5156699c56">ButtonConfig::kFeatureClick<\/a>)<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;      || mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a638943c127dd60288a83e83260825d01">ButtonConfig::kFeatureDoubleClick<\/a>)) {<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;    checkClicked(now);<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;  }<\/div><div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;<\/div><div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;  <span class="comment">\/\/ check if Released events are suppressed<\/span><\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;  <span class="keywordtype">bool<\/span> suppress =<\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;      ((isLongPressed() &amp;&amp;<\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;          mButtonConfig-&gt;<\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;              isFeature(<a class="code" href="classace__button_1_1ButtonConfig.html#a15b8e90b1ffe01009a1d7dd18b5b6aae">ButtonConfig::kFeatureSuppressAfterLongPress<\/a>)) ||<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;      (isRepeatPressed() &amp;&amp;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;          mButtonConfig-&gt;<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;              isFeature(<a class="code" href="classace__button_1_1ButtonConfig.html#a6b43b591ba53d360e787bf780af0abbc">ButtonConfig::kFeatureSuppressAfterRepeatPress<\/a>)) ||<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;      (isClicked() &amp;&amp;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;          mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a57327066d135bcc99c4a68b55fca162e">ButtonConfig::kFeatureSuppressAfterClick<\/a>)) ||<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;      (isDoubleClicked() &amp;&amp;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;          mButtonConfig-&gt;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;              isFeature(<a class="code" href="classace__button_1_1ButtonConfig.html#a7642e16b2cc8dd0136312054b1da8f9e">ButtonConfig::kFeatureSuppressAfterDoubleClick<\/a>)));<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;  <span class="comment">\/\/ button was released<\/span><\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;  clearPressed();<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;  clearDoubleClicked();<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;  clearLongPressed();<\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;  clearRepeatPressed();<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;  <span class="keywordflow">if<\/span> (!suppress) {<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;    handleEvent(<a class="code" href="classace__button_1_1AceButton.html#ada5bd7c31950e2acdb8a9464e795c13c">kEventReleased<\/a>);<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;  }<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;}<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkClicked(uint16_t now) {<\/div><div class="line"><a name="l00276"><\/a><span class="lineno">  276<\/span>&#160;  <span class="keywordflow">if<\/span> (!isPressed()) {<\/div><div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;    <span class="comment">\/\/ Not a Click unless the previous state was a Pressed state.<\/span><\/div><div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;    <span class="comment">\/\/ This can happen if the chip was rebooted with the button Pressed. Upon<\/span><\/div><div class="line"><a name="l00279"><\/a><span class="lineno">  279<\/span>&#160;    <span class="comment">\/\/ Release, it shouldn&#39;t generated a click, even accidentally due to a<\/span><\/div><div class="line"><a name="l00280"><\/a><span class="lineno">  280<\/span>&#160;    <span class="comment">\/\/ spurious value in mLastPressTime.<\/span><\/div><div class="line"><a name="l00281"><\/a><span class="lineno">  281<\/span>&#160;    clearClicked();<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;  }<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;  uint16_t elapsedTime = now - mLastPressTime;<\/div><div class="line"><a name="l00285"><\/a><span class="lineno">  285<\/span>&#160;  <span class="keywordflow">if<\/span> (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a19db203ce87dc2cafb2cab6ba124387a">getClickDelay<\/a>()) {<\/div><div class="line"><a name="l00286"><\/a><span class="lineno">  286<\/span>&#160;    clearClicked();<\/div><div class="line"><a name="l00287"><\/a><span class="lineno">  287<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno">  288<\/span>&#160;  }<\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;  <span class="comment">\/\/ check for double click<\/span><\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a638943c127dd60288a83e83260825d01">ButtonConfig::kFeatureDoubleClick<\/a>)) {<\/div><div class="line"><a name="l00292"><\/a><span class="lineno">  292<\/span>&#160;    checkDoubleClicked(now);<\/div><div class="line"><a name="l00293"><\/a><span class="lineno">  293<\/span>&#160;  }<\/div><div class="line"><a name="l00294"><\/a><span class="lineno">  294<\/span>&#160;<\/div><div class="line"><a name="l00295"><\/a><span class="lineno">  295<\/span>&#160;  <span class="comment">\/\/ Suppress a second click (both buttonState change and event message) if<\/span><\/div><div class="line"><a name="l00296"><\/a><span class="lineno">  296<\/span>&#160;  <span class="comment">\/\/ double-click detected, which has the side-effect of preventing 3 clicks<\/span><\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;  <span class="comment">\/\/ from generating another double-click at the third click.<\/span><\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;  <span class="keywordflow">if<\/span> (isDoubleClicked()) {<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;    clearClicked();<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;  }<\/div><div class="line"><a name="l00302"><\/a><span class="lineno">  302<\/span>&#160;<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;  <span class="comment">\/\/ we got a single click<\/span><\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;  mLastClickTime = now;<\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;  setClicked();<\/div><div class="line"><a name="l00306"><\/a><span class="lineno">  306<\/span>&#160;  <span class="keywordflow">if<\/span> (mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(<\/div><div class="line"><a name="l00307"><\/a><span class="lineno">  307<\/span>&#160;      <a class="code" href="classace__button_1_1ButtonConfig.html#a80d621dbcf533c9bb91a111b8fec2c53">ButtonConfig::kFeatureSuppressClickBeforeDoubleClick<\/a>)) {<\/div><div class="line"><a name="l00308"><\/a><span class="lineno">  308<\/span>&#160;    setClickPostponed();<\/div><div class="line"><a name="l00309"><\/a><span class="lineno">  309<\/span>&#160;  } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00310"><\/a><span class="lineno">  310<\/span>&#160;    handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a21797e5e069da3f7bba42b40ab3a7305">kEventClicked<\/a>);<\/div><div class="line"><a name="l00311"><\/a><span class="lineno">  311<\/span>&#160;  }<\/div><div class="line"><a name="l00312"><\/a><span class="lineno">  312<\/span>&#160;}<\/div><div class="line"><a name="l00313"><\/a><span class="lineno">  313<\/span>&#160;<\/div><div class="line"><a name="l00314"><\/a><span class="lineno">  314<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkDoubleClicked(uint16_t now) {<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;  <span class="keywordflow">if<\/span> (!isClicked()) {<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;    clearDoubleClicked();<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00318"><\/a><span class="lineno">  318<\/span>&#160;  }<\/div><div class="line"><a name="l00319"><\/a><span class="lineno">  319<\/span>&#160;<\/div><div class="line"><a name="l00320"><\/a><span class="lineno">  320<\/span>&#160;  uint16_t elapsedTime = now - mLastClickTime;<\/div><div class="line"><a name="l00321"><\/a><span class="lineno">  321<\/span>&#160;  <span class="keywordflow">if<\/span> (elapsedTime &gt;= mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a5ba500367e03c36f39225a5858e110e6">getDoubleClickDelay<\/a>()) {<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;    clearDoubleClicked();<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;    <span class="comment">\/\/ There should be no postponed Click at this point because<\/span><\/div><div class="line"><a name="l00324"><\/a><span class="lineno">  324<\/span>&#160;    <span class="comment">\/\/ checkPostponedClick() should have taken care of it.<\/span><\/div><div class="line"><a name="l00325"><\/a><span class="lineno">  325<\/span>&#160;    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00326"><\/a><span class="lineno">  326<\/span>&#160;  }<\/div><div class="line"><a name="l00327"><\/a><span class="lineno">  327<\/span>&#160;<\/div><div class="line"><a name="l00328"><\/a><span class="lineno">  328<\/span>&#160;  <span class="comment">\/\/ If there was a postponed click, suppress it because it could only have been<\/span><\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;  <span class="comment">\/\/ postponed if kFeatureSuppressClickBeforeDoubleClick was enabled. If we got<\/span><\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;  <span class="comment">\/\/ to this point, there was a DoubleClick, so we must suppress the first<\/span><\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;  <span class="comment">\/\/ Click as requested.<\/span><\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;  <span class="keywordflow">if<\/span> (isClickPostponed()) {<\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;    clearClickPostponed();<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;  }<\/div><div class="line"><a name="l00335"><\/a><span class="lineno">  335<\/span>&#160;  setDoubleClicked();<\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;  handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a0c63f30106e4688425ba37d8f7a9546b">kEventDoubleClicked<\/a>);<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;}<\/div><div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;<\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkOrphanedClick(uint16_t now) {<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;  <span class="comment">\/\/ The amount of time which must pass before a click is determined to be<\/span><\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;  <span class="comment">\/\/ orphaned and reclaimed. If only DoubleClicked is supported, then I think<\/span><\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;  <span class="comment">\/\/ just getDoubleClickDelay() is correct. No other higher level event uses the<\/span><\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;  <span class="comment">\/\/ first Clicked event. If TripleClicked becomes supported, I think<\/span><\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;  <span class="comment">\/\/ orphanedClickDelay will be either (2 * getDoubleClickDelay()) or<\/span><\/div><div class="line"><a name="l00345"><\/a><span class="lineno">  345<\/span>&#160;  <span class="comment">\/\/ (getDoubleClickDelay() + getTripleClickDelay()), depending on whether the<\/span><\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;  <span class="comment">\/\/ TripleClick has an independent delay time, or reuses the DoubleClick delay<\/span><\/div><div class="line"><a name="l00347"><\/a><span class="lineno">  347<\/span>&#160;  <span class="comment">\/\/ time. But I&#39;m not sure that I&#39;ve thought through all the details.<\/span><\/div><div class="line"><a name="l00348"><\/a><span class="lineno">  348<\/span>&#160;  uint16_t orphanedClickDelay = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a5ba500367e03c36f39225a5858e110e6">getDoubleClickDelay<\/a>();<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;  uint16_t elapsedTime = now - mLastClickTime;<\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;  <span class="keywordflow">if<\/span> (isClicked() &amp;&amp; (elapsedTime &gt;= orphanedClickDelay)) {<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;    clearClicked();<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;  }<\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;}<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::checkPostponedClick(uint16_t now) {<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;  uint16_t postponedClickDelay = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a5ba500367e03c36f39225a5858e110e6">getDoubleClickDelay<\/a>();<\/div><div class="line"><a name="l00358"><\/a><span class="lineno">  358<\/span>&#160;  uint16_t elapsedTime = now - mLastClickTime;<\/div><div class="line"><a name="l00359"><\/a><span class="lineno">  359<\/span>&#160;  <span class="keywordflow">if<\/span> (isClickPostponed() &amp;&amp; elapsedTime &gt;= postponedClickDelay) {<\/div><div class="line"><a name="l00360"><\/a><span class="lineno">  360<\/span>&#160;    handleEvent(<a class="code" href="classace__button_1_1AceButton.html#a21797e5e069da3f7bba42b40ab3a7305">kEventClicked<\/a>);<\/div><div class="line"><a name="l00361"><\/a><span class="lineno">  361<\/span>&#160;    clearClickPostponed();<\/div><div class="line"><a name="l00362"><\/a><span class="lineno">  362<\/span>&#160;  }<\/div><div class="line"><a name="l00363"><\/a><span class="lineno">  363<\/span>&#160;}<\/div><div class="line"><a name="l00364"><\/a><span class="lineno">  364<\/span>&#160;<\/div><div class="line"><a name="l00365"><\/a><span class="lineno">  365<\/span>&#160;<span class="keywordtype">void<\/span> AceButton::handleEvent(uint8_t eventType) {<\/div><div class="line"><a name="l00366"><\/a><span class="lineno">  366<\/span>&#160;  <a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">ButtonConfig::EventHandler<\/a> eventHandler = mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a8fc32804ba102f61ba97bcc5f4fe8448">getEventHandler<\/a>();<\/div><div class="line"><a name="l00367"><\/a><span class="lineno">  367<\/span>&#160;  <span class="keywordflow">if<\/span> (eventHandler) {<\/div><div class="line"><a name="l00368"><\/a><span class="lineno">  368<\/span>&#160;    eventHandler(<span class="keyword">this<\/span>, eventType, <a class="code" href="classace__button_1_1AceButton.html#a3c49e9edf8cbb5e3800c5f4506d0beca">getLastButtonState<\/a>());<\/div><div class="line"><a name="l00369"><\/a><span class="lineno">  369<\/span>&#160;  }<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;}<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;}<\/div><div class="ttc" id="classace__button_1_1ButtonConfig_html_aec4a97a1a1306b9ff12f1cdf44515c43"><div class="ttname"><a href="classace__button_1_1ButtonConfig.html#aec4a97a1a1306b9ff12f1cdf44515c43">ace_button::ButtonConfig::getRepeatPressInterval<\/a><\/div><div class="ttdeci">uint16_t getRepeatPressInterval()<\/div><div class="ttdoc">Milliseconds between two successive RepeatPressed events. <\/div><div class="ttdef"><b>Definition:<\/b> <a href="ace__button_2ButtonConfig_8h_source.html#l00207">ButtonConfig.h:207<\/a><\/div><\/div>$/;"	a
l00001	../libraries/AceButton/docs/html/AceButton_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#ifndef ACE_BUTTON_H<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_H<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">#include &quot;ace_button\/TimingStats.h&quot;<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">#include &quot;ace_button\/ButtonConfig.h&quot;<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">#include &quot;ace_button\/AdjustableButtonConfig.h&quot;<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor">#include &quot;ace_button\/AceButton.h&quot;<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="comment">\/\/ Version format: xxyyzz == &quot;xx.yy.zz&quot;<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_VERSION 10301<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	../libraries/AceButton/docs/html/AdjustableButtonConfig_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * This file has moved to &lt;ace_button\/AdjustableButtonConfig.h&gt; and is<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * deprecated as of version 1.1. The &lt;AceButton.h&gt; header automatically includes<\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * &lt;ace_button\/AdjustableButtonConfig.h&gt;. You can remove the line in your code<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * that does:<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> *  #include &lt;AdjustableButtonConfig.h&gt;<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * You only need to do:<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> *  #include &lt;AceButton.h&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> *\/<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	../libraries/AceButton/docs/html/ButtonConfig_8cpp_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &quot;ButtonConfig.h&quot;<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment">\/\/ The default &quot;System&quot; instance of a ButtonConfig.<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;ButtonConfig ButtonConfig::sSystemButtonConfig;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;}<\/div><div class="ttc" id="namespaceace__button_html"><div class="ttname"><a href="namespaceace__button.html">ace_button<\/a><\/div><div class="ttdef"><b>Definition:<\/b> <a href="AceButton_8cpp_source.html#l00028">AceButton.cpp:28<\/a><\/div><\/div>$/;"	a
l00001	../libraries/AceButton/docs/html/ButtonConfig_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * This file has moved to &lt;ace_button\/ButtonConfig.h&gt; and is deprecated as<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * of version 1.1. The &lt;AceButton.h&gt; header automatically includes<\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * &lt;ace_button\/ButtonConfig.h&gt;. You can remove the line in your code that does:<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> *  #include &lt;ButtonConfig.h&gt;<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> * You only need to do:<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> *<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> *  #include &lt;AceButton.h&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> *\/<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	../libraries/AceButton/docs/html/TimingStats_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#ifndef ACE_BUTTON_TIMING_STATS_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_TIMING_STATS_H<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classace__button_1_1TimingStats.html">   32<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classace__button_1_1TimingStats.html">TimingStats<\/a> {<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classace__button_1_1TimingStats.html#ad763ef53d333dd86964acd7b5458491b">   35<\/a><\/span>&#160;    <a class="code" href="classace__button_1_1TimingStats.html#ad763ef53d333dd86964acd7b5458491b">TimingStats<\/a>(): mCounter(0) {<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      reset();<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    }<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;    <span class="keywordtype">void<\/span> reset() {<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;      mExpDecayAvg = 0;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;      mMin = UINT16_MAX;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;      mMax = 0;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;      mSum = 0;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;      mCount = 0;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    }<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    uint16_t getMax()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> mMax; }<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    uint16_t getMin()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> mMin; }<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    uint16_t getAvg()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> (mCount &gt; 0) ? mSum \/ mCount : 0; }<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="classace__button_1_1TimingStats.html#a04c9dbea755eafeed3bb7872d7fb0d24">   54<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1TimingStats.html#a04c9dbea755eafeed3bb7872d7fb0d24">getExpDecayAvg<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> mExpDecayAvg; }<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="classace__button_1_1TimingStats.html#ad23641b3302acb7050317c8749febe3d">   57<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1TimingStats.html#ad23641b3302acb7050317c8749febe3d">getCount<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> mCount; }<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="classace__button_1_1TimingStats.html#a3eab5a6a7a43e1a565d91faf14b148b2">   64<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1TimingStats.html#a3eab5a6a7a43e1a565d91faf14b148b2">getCounter<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> mCounter; }<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;    <span class="keywordtype">void<\/span> update(uint16_t duration) {<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;      mCount++;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;      mCounter++;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;      mSum += duration;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;      <span class="keywordflow">if<\/span> (duration &lt; mMin) {<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        mMin = duration;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;      }<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;      <span class="keywordflow">if<\/span> (duration &gt; mMax) {<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        mMax = duration;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;      }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;      mExpDecayAvg = (mExpDecayAvg + duration) \/ 2;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;    }<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;    uint16_t mExpDecayAvg;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    uint16_t mMin;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;    uint16_t mMax;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    uint32_t mSum;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    uint16_t mCount;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;    uint16_t mCounter;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;};<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;}<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classace__button_1_1TimingStats_html_a04c9dbea755eafeed3bb7872d7fb0d24"><div class="ttname"><a href="classace__button_1_1TimingStats.html#a04c9dbea755eafeed3bb7872d7fb0d24">ace_button::TimingStats::getExpDecayAvg<\/a><\/div><div class="ttdeci">uint16_t getExpDecayAvg() const<\/div><div class="ttdoc">An exponential decay average. <\/div><div class="ttdef"><b>Definition:<\/b> <a href="TimingStats_8h_source.html#l00054">TimingStats.h:54<\/a><\/div><\/div>$/;"	a
l00001	../libraries/AceButton/docs/html/ace__button_2AceButton_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#ifndef ACE_BUTTON_ACE_BUTTON_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_ACE_BUTTON_H<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;Arduino.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &quot;ButtonConfig.h&quot;<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html">   50<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classace__button_1_1AceButton.html">AceButton<\/a> {<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;    <span class="comment">\/\/ The supported event types.<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#ae723d826fe219a8415764b9fed5d8976">   55<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#ae723d826fe219a8415764b9fed5d8976">kEventPressed<\/a> = 0;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#ada5bd7c31950e2acdb8a9464e795c13c">   58<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#ada5bd7c31950e2acdb8a9464e795c13c">kEventReleased<\/a> = 1;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a21797e5e069da3f7bba42b40ab3a7305">   64<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#a21797e5e069da3f7bba42b40ab3a7305">kEventClicked<\/a> = 2;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a0c63f30106e4688425ba37d8f7a9546b">   70<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#a0c63f30106e4688425ba37d8f7a9546b">kEventDoubleClicked<\/a> = 3;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a769599d288f64dc0e55a69184596d804">   76<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#a769599d288f64dc0e55a69184596d804">kEventLongPressed<\/a> = 4;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a9c4195cb128da40677ea223eb81743c9">   84<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#a9c4195cb128da40677ea223eb81743c9">kEventRepeatPressed<\/a> = 5;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#afe8e8e22146f510afa487e6ec98b6253">   90<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t <a class="code" href="classace__button_1_1AceButton.html#afe8e8e22146f510afa487e6ec98b6253">kButtonStateUnknown<\/a> = 2;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;    <span class="keyword">explicit<\/span> <a class="code" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">AceButton<\/a>(uint8_t pin = 0, uint8_t defaultReleasedState = HIGH,<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        uint8_t <span class="keywordtype">id<\/span> = 0);<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;    <span class="keyword">explicit<\/span> <a class="code" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">AceButton<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* buttonConfig);<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#a18c47304c694c6f084a343a7c83bef34">init<\/a>(uint8_t pin = 0, uint8_t defaultReleasedState = HIGH,<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;        uint8_t <span class="keywordtype">id<\/span> = 0);<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a5e4ea4aca852a5e0b1d426bccb131cfb">  143<\/a><\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* <a class="code" href="classace__button_1_1AceButton.html#a5e4ea4aca852a5e0b1d426bccb131cfb">getButtonConfig<\/a>() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;      <span class="keywordflow">return<\/span> mButtonConfig;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;    }<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#abc9d705d1ca4341cf6f9434962b5b5e7">  152<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#abc9d705d1ca4341cf6f9434962b5b5e7">setButtonConfig<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* buttonConfig) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;      mButtonConfig = buttonConfig;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;    }<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;<\/div><div class="line"><a name="l00165"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a42edbfeb4091c867d976a4d24622f19c">  165<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#a42edbfeb4091c867d976a4d24622f19c">setEventHandler<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">ButtonConfig::EventHandler<\/a> eventHandler)<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;        ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;      mButtonConfig-&gt;<a class="code" href="classace__button_1_1ButtonConfig.html#a5d228f08e9943fd4ab90caab39ef80be">setEventHandler<\/a>(eventHandler);<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;    }<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#ac6b12ca62c7c055325bfebd036579ed6">  171<\/a><\/span>&#160;    uint8_t <a class="code" href="classace__button_1_1AceButton.html#ac6b12ca62c7c055325bfebd036579ed6">getPin<\/a>() ACE_BUTTON_INLINE { <span class="keywordflow">return<\/span> mPin; }<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div><div class="line"><a name="l00174"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a4a693b836e3fed29d4e7203a5a97910b">  174<\/a><\/span>&#160;    uint8_t <a class="code" href="classace__button_1_1AceButton.html#a4a693b836e3fed29d4e7203a5a97910b">getId<\/a>() ACE_BUTTON_INLINE { <span class="keywordflow">return<\/span> mId; }<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;    uint8_t <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>();<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#a3c49e9edf8cbb5e3800c5f4506d0beca">  192<\/a><\/span>&#160;    uint8_t <a class="code" href="classace__button_1_1AceButton.html#a3c49e9edf8cbb5e3800c5f4506d0beca">getLastButtonState<\/a>() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;      <span class="keywordflow">return<\/span> mLastButtonState;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;    }<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1AceButton.html#af710048a654fa5d5e45405661282a7b1">check<\/a>();<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;<\/div><div class="line"><a name="l00220"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AceButton.html#aa3cbb3fb16076cfe9255e0f70cc6aa72">  220<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classace__button_1_1AceButton.html#aa3cbb3fb16076cfe9255e0f70cc6aa72">isReleased<\/a>(uint8_t buttonState) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;      <span class="keywordflow">return<\/span> buttonState == <a class="code" href="classace__button_1_1AceButton.html#afa8013bb98f5fbd79654aebca613ba71">getDefaultReleasedState<\/a>();<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;    }<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;  <span class="comment">\/\/ Some of these private methods may be useful to the calling client but I<\/span><\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;  <span class="comment">\/\/ don&#39;t want to release them to the public because I want to keep the API as<\/span><\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;  <span class="comment">\/\/ small as possible for easier long term maintenance. (Once a method is<\/span><\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;  <span class="comment">\/\/ released to the public, it must be supported forever to ensure backwards<\/span><\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;  <span class="comment">\/\/ compatibility with older client code.)<\/span><\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;    <span class="comment">\/\/ Disable copy-constructor and assignment operator<\/span><\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;    <a class="code" href="classace__button_1_1AceButton.html#a3c480636223edc899a79c821c32c6982">AceButton<\/a>(<span class="keyword">const<\/span> <a class="code" href="classace__button_1_1AceButton.html">AceButton<\/a>&amp;) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;    <a class="code" href="classace__button_1_1AceButton.html">AceButton<\/a>&amp; operator=(<span class="keyword">const<\/span> <a class="code" href="classace__button_1_1AceButton.html">AceButton<\/a>&amp;) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;    <span class="keywordtype">void<\/span> setPin(uint8_t pin) ACE_BUTTON_INLINE { mPin = pin; }<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;    <span class="keywordtype">void<\/span> setDefaultReleasedState(uint8_t state);<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;    <span class="keywordtype">void<\/span> setId(uint8_t <span class="keywordtype">id<\/span>) ACE_BUTTON_INLINE { mId = id; }<\/div><div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;<\/div><div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;    <span class="comment">\/\/ Various bit masks to store a boolean flag in the &#39;mFlags&#39; field.<\/span><\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;    <span class="comment">\/\/ We use bit masks to save static RAM. If we had used a &#39;bool&#39; type, each<\/span><\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;    <span class="comment">\/\/ of these would consume one byte.<\/span><\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagDefaultReleasedState = 0x01;<\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagDebouncing = 0x02;<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagPressed = 0x04;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagClicked = 0x08;<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagDoubleClicked = 0x10;<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagLongPressed = 0x20;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagRepeatPressed = 0x40;<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint8_t kFlagClickPostponed = 0x80;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;    <span class="comment">\/\/ Methods for accessing the button&#39;s internal states.<\/span><\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;    <span class="comment">\/\/ I don&#39;t expect these to be useful to the outside world.<\/span><\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;    <span class="comment">\/\/ If this is set, then mLastDebounceTime is valid.<\/span><\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;    <span class="keywordtype">bool<\/span> isDebouncing() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagDebouncing;<\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;    }<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;    <span class="keywordtype">void<\/span> setDebouncing() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;      mFlags |= kFlagDebouncing;<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;    }<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;    <span class="keywordtype">void<\/span> clearDebouncing() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;      mFlags &amp;= ~kFlagDebouncing;<\/div><div class="line"><a name="l00276"><\/a><span class="lineno">  276<\/span>&#160;    }<\/div><div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;<\/div><div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;    <span class="comment">\/\/ If this is set, then mLastPressTime is valid.<\/span><\/div><div class="line"><a name="l00279"><\/a><span class="lineno">  279<\/span>&#160;    <span class="keywordtype">bool<\/span> isPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00280"><\/a><span class="lineno">  280<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagPressed;<\/div><div class="line"><a name="l00281"><\/a><span class="lineno">  281<\/span>&#160;    }<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;    <span class="keywordtype">void<\/span> setPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;      mFlags |= kFlagPressed;<\/div><div class="line"><a name="l00285"><\/a><span class="lineno">  285<\/span>&#160;    }<\/div><div class="line"><a name="l00286"><\/a><span class="lineno">  286<\/span>&#160;<\/div><div class="line"><a name="l00287"><\/a><span class="lineno">  287<\/span>&#160;    <span class="keywordtype">void<\/span> clearPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00288"><\/a><span class="lineno">  288<\/span>&#160;      mFlags &amp;= ~kFlagPressed;<\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;    }<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;    <span class="comment">\/\/ If this is set, then mLastClickTime is valid.<\/span><\/div><div class="line"><a name="l00292"><\/a><span class="lineno">  292<\/span>&#160;    <span class="keywordtype">bool<\/span> isClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00293"><\/a><span class="lineno">  293<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagClicked;<\/div><div class="line"><a name="l00294"><\/a><span class="lineno">  294<\/span>&#160;    }<\/div><div class="line"><a name="l00295"><\/a><span class="lineno">  295<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno">  296<\/span>&#160;    <span class="keywordtype">void<\/span> setClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;      mFlags |= kFlagClicked;<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;    }<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;    <span class="keywordtype">void<\/span> clearClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;      mFlags &amp;= ~kFlagClicked;<\/div><div class="line"><a name="l00302"><\/a><span class="lineno">  302<\/span>&#160;    }<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;    <span class="comment">\/\/ A double click was detected. No need to store the last double-clicked<\/span><\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;    <span class="comment">\/\/ time because we don&#39;t support a triple-click event (yet).<\/span><\/div><div class="line"><a name="l00306"><\/a><span class="lineno">  306<\/span>&#160;    <span class="keywordtype">bool<\/span> isDoubleClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00307"><\/a><span class="lineno">  307<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagDoubleClicked;<\/div><div class="line"><a name="l00308"><\/a><span class="lineno">  308<\/span>&#160;    }<\/div><div class="line"><a name="l00309"><\/a><span class="lineno">  309<\/span>&#160;<\/div><div class="line"><a name="l00310"><\/a><span class="lineno">  310<\/span>&#160;    <span class="keywordtype">void<\/span> setDoubleClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00311"><\/a><span class="lineno">  311<\/span>&#160;      mFlags |= kFlagDoubleClicked;<\/div><div class="line"><a name="l00312"><\/a><span class="lineno">  312<\/span>&#160;    }<\/div><div class="line"><a name="l00313"><\/a><span class="lineno">  313<\/span>&#160;<\/div><div class="line"><a name="l00314"><\/a><span class="lineno">  314<\/span>&#160;    <span class="keywordtype">void<\/span> clearDoubleClicked() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;      mFlags &amp;= ~kFlagDoubleClicked;<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;    }<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;<\/div><div class="line"><a name="l00318"><\/a><span class="lineno">  318<\/span>&#160;    <span class="comment">\/\/ If this is set, then mLastPressTime can be treated as the start<\/span><\/div><div class="line"><a name="l00319"><\/a><span class="lineno">  319<\/span>&#160;    <span class="comment">\/\/ of a long press.<\/span><\/div><div class="line"><a name="l00320"><\/a><span class="lineno">  320<\/span>&#160;    <span class="keywordtype">bool<\/span> isLongPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00321"><\/a><span class="lineno">  321<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagLongPressed;<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;    }<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;<\/div><div class="line"><a name="l00324"><\/a><span class="lineno">  324<\/span>&#160;    <span class="keywordtype">void<\/span> setLongPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00325"><\/a><span class="lineno">  325<\/span>&#160;      mFlags |= kFlagLongPressed;<\/div><div class="line"><a name="l00326"><\/a><span class="lineno">  326<\/span>&#160;    }<\/div><div class="line"><a name="l00327"><\/a><span class="lineno">  327<\/span>&#160;<\/div><div class="line"><a name="l00328"><\/a><span class="lineno">  328<\/span>&#160;    <span class="keywordtype">void<\/span> clearLongPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;      mFlags &amp;= ~kFlagLongPressed;<\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;    }<\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;<\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;    <span class="comment">\/\/ If this is set, then mLastRepeatPressTime is valid.<\/span><\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;    <span class="keywordtype">bool<\/span> isRepeatPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagRepeatPressed;<\/div><div class="line"><a name="l00335"><\/a><span class="lineno">  335<\/span>&#160;    }<\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;    <span class="keywordtype">void<\/span> setRepeatPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;      mFlags |= kFlagRepeatPressed;<\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;    }<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;    <span class="keywordtype">void<\/span> clearRepeatPressed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;      mFlags &amp;= ~kFlagRepeatPressed;<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;    }<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;<\/div><div class="line"><a name="l00345"><\/a><span class="lineno">  345<\/span>&#160;    <span class="keywordtype">bool<\/span> isClickPostponed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;      <span class="keywordflow">return<\/span> mFlags &amp; kFlagClickPostponed;<\/div><div class="line"><a name="l00347"><\/a><span class="lineno">  347<\/span>&#160;    }<\/div><div class="line"><a name="l00348"><\/a><span class="lineno">  348<\/span>&#160;<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;    <span class="keywordtype">void<\/span> setClickPostponed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;      mFlags |= kFlagClickPostponed;<\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;    }<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;    <span class="keywordtype">void<\/span> clearClickPostponed() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;      mFlags &amp;= ~kFlagClickPostponed;<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;    }<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;<\/div><div class="line"><a name="l00362"><\/a><span class="lineno">  362<\/span>&#160;    <span class="keywordtype">bool<\/span> checkDebounced(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00363"><\/a><span class="lineno">  363<\/span>&#160;<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;    <span class="keywordtype">bool<\/span> checkInitialized(uint16_t buttonState);<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;    <span class="keywordtype">void<\/span> checkEvent(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00374"><\/a><span class="lineno">  374<\/span>&#160;<\/div><div class="line"><a name="l00376"><\/a><span class="lineno">  376<\/span>&#160;    <span class="keywordtype">void<\/span> checkLongPress(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00377"><\/a><span class="lineno">  377<\/span>&#160;<\/div><div class="line"><a name="l00379"><\/a><span class="lineno">  379<\/span>&#160;    <span class="keywordtype">void<\/span> checkRepeatPress(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00380"><\/a><span class="lineno">  380<\/span>&#160;<\/div><div class="line"><a name="l00382"><\/a><span class="lineno">  382<\/span>&#160;    <span class="keywordtype">void<\/span> checkChanged(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00383"><\/a><span class="lineno">  383<\/span>&#160;<\/div><div class="line"><a name="l00388"><\/a><span class="lineno">  388<\/span>&#160;    <span class="keywordtype">void<\/span> checkReleased(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00389"><\/a><span class="lineno">  389<\/span>&#160;<\/div><div class="line"><a name="l00391"><\/a><span class="lineno">  391<\/span>&#160;    <span class="keywordtype">void<\/span> checkPressed(uint16_t now, uint8_t buttonState);<\/div><div class="line"><a name="l00392"><\/a><span class="lineno">  392<\/span>&#160;<\/div><div class="line"><a name="l00394"><\/a><span class="lineno">  394<\/span>&#160;    <span class="keywordtype">void<\/span> checkClicked(uint16_t now);<\/div><div class="line"><a name="l00395"><\/a><span class="lineno">  395<\/span>&#160;<\/div><div class="line"><a name="l00400"><\/a><span class="lineno">  400<\/span>&#160;    <span class="keywordtype">void<\/span> checkDoubleClicked(uint16_t now);<\/div><div class="line"><a name="l00401"><\/a><span class="lineno">  401<\/span>&#160;<\/div><div class="line"><a name="l00410"><\/a><span class="lineno">  410<\/span>&#160;    <span class="keywordtype">void<\/span> checkOrphanedClick(uint16_t now);<\/div><div class="line"><a name="l00411"><\/a><span class="lineno">  411<\/span>&#160;<\/div><div class="line"><a name="l00416"><\/a><span class="lineno">  416<\/span>&#160;    <span class="keywordtype">void<\/span> checkPostponedClick(uint16_t now);<\/div><div class="line"><a name="l00417"><\/a><span class="lineno">  417<\/span>&#160;<\/div><div class="line"><a name="l00464"><\/a><span class="lineno">  464<\/span>&#160;    <span class="keywordtype">void<\/span> handleEvent(uint8_t eventType);<\/div><div class="line"><a name="l00465"><\/a><span class="lineno">  465<\/span>&#160;<\/div><div class="line"><a name="l00466"><\/a><span class="lineno">  466<\/span>&#160;    uint8_t mPin; <span class="comment">\/\/ button pin number<\/span><\/div><div class="line"><a name="l00467"><\/a><span class="lineno">  467<\/span>&#160;    uint8_t mId; <span class="comment">\/\/ identifier, e.g. an index into an array<\/span><\/div><div class="line"><a name="l00468"><\/a><span class="lineno">  468<\/span>&#160;<\/div><div class="line"><a name="l00469"><\/a><span class="lineno">  469<\/span>&#160;    <span class="comment">\/\/ Internal states of the button debouncing and event handling.<\/span><\/div><div class="line"><a name="l00470"><\/a><span class="lineno">  470<\/span>&#160;    <span class="comment">\/\/ NOTE: We don&#39;t keep track of the lastDoubleClickTime, because we<\/span><\/div><div class="line"><a name="l00471"><\/a><span class="lineno">  471<\/span>&#160;    <span class="comment">\/\/ don&#39;t support a TripleClicked event. That may change in the future.<\/span><\/div><div class="line"><a name="l00472"><\/a><span class="lineno">  472<\/span>&#160;    uint16_t mLastDebounceTime; <span class="comment">\/\/ ms<\/span><\/div><div class="line"><a name="l00473"><\/a><span class="lineno">  473<\/span>&#160;    uint16_t mLastClickTime; <span class="comment">\/\/ ms<\/span><\/div><div class="line"><a name="l00474"><\/a><span class="lineno">  474<\/span>&#160;    uint16_t mLastPressTime; <span class="comment">\/\/ ms<\/span><\/div><div class="line"><a name="l00475"><\/a><span class="lineno">  475<\/span>&#160;    uint16_t mLastRepeatPressTime; <span class="comment">\/\/ ms<\/span><\/div><div class="line"><a name="l00476"><\/a><span class="lineno">  476<\/span>&#160;<\/div><div class="line"><a name="l00478"><\/a><span class="lineno">  478<\/span>&#160;    uint8_t mFlags;<\/div><div class="line"><a name="l00479"><\/a><span class="lineno">  479<\/span>&#160;<\/div><div class="line"><a name="l00484"><\/a><span class="lineno">  484<\/span>&#160;    uint8_t mLastButtonState;<\/div><div class="line"><a name="l00485"><\/a><span class="lineno">  485<\/span>&#160;<\/div><div class="line"><a name="l00487"><\/a><span class="lineno">  487<\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* mButtonConfig;<\/div><div class="line"><a name="l00488"><\/a><span class="lineno">  488<\/span>&#160;};<\/div><div class="line"><a name="l00489"><\/a><span class="lineno">  489<\/span>&#160;<\/div><div class="line"><a name="l00490"><\/a><span class="lineno">  490<\/span>&#160;}<\/div><div class="line"><a name="l00491"><\/a><span class="lineno">  491<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classace__button_1_1AceButton_html_a42edbfeb4091c867d976a4d24622f19c"><div class="ttname"><a href="classace__button_1_1AceButton.html#a42edbfeb4091c867d976a4d24622f19c">ace_button::AceButton::setEventHandler<\/a><\/div><div class="ttdeci">void setEventHandler(ButtonConfig::EventHandler eventHandler) ACE_BUTTON_INLINE<\/div><div class="ttdoc">Convenience method to set the event handler. <\/div><div class="ttdef"><b>Definition:<\/b> <a href="ace__button_2AceButton_8h_source.html#l00165">AceButton.h:165<\/a><\/div><\/div>$/;"	a
l00001	../libraries/AceButton/docs/html/ace__button_2AdjustableButtonConfig_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#ifndef ACE_BUTTON_ADJUSTABLE_BUTTON_CONFIG_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_ADJUSTABLE_BUTTON_CONFIG_H<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;ButtonConfig.h&quot;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="classace__button_1_1AdjustableButtonConfig.html">   43<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classace__button_1_1AdjustableButtonConfig.html">AdjustableButtonConfig<\/a>: <span class="keyword">public<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a> {<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;};<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;}<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classace__button_1_1AdjustableButtonConfig_html"><div class="ttname"><a href="classace__button_1_1AdjustableButtonConfig.html">ace_button::AdjustableButtonConfig<\/a><\/div><div class="ttdoc">A subclass of ButtonConfig which allows the user to override the varous timing parameters of ButtonCo...<\/div><div class="ttdef"><b>Definition:<\/b> <a href="ace__button_2AdjustableButtonConfig_8h_source.html#l00043">AdjustableButtonConfig.h:43<\/a><\/div><\/div>$/;"	a
l00001	../libraries/AceButton/docs/html/ace__button_2ButtonConfig_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">MIT License<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2018 Brian T. Park<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#ifndef ACE_BUTTON_BUTTON_CONFIG_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_BUTTON_CONFIG_H<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;Arduino.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/ TODO: Verify if this is actually needed. The program size seems to be<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment">\/\/ identical with or without it on the Arduino IDE (which uses gcc).<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#define ACE_BUTTON_INLINE __attribute__((always_inline))<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceace__button.html">ace_button<\/a> {<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="keyword">class <\/span>AceButton;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="keyword">class <\/span>TimingStats;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html">   60<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a> {<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="comment">\/\/ Various timing constants, in milliseconds.<\/span><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;    <span class="comment">\/\/<\/span><\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;    <span class="comment">\/\/ Note that the timing constants are stored as uint16_t (2<\/span><\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;    <span class="comment">\/\/ bytes) instead of unsigned long (4 bytes) which is the type returned by<\/span><\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;    <span class="comment">\/\/ the millis() system method. It turns out that we can store and perform<\/span><\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    <span class="comment">\/\/ all timing calculations using uint16_t without ill effect, as long as the<\/span><\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    <span class="comment">\/\/ polling of AceButton::check() happens more frequently than the rollover<\/span><\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;    <span class="comment">\/\/ time of a uint16_t (i.e. 65.536 seconds) and certain precautions (e.g.<\/span><\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="comment">\/\/ AceButton::checkOrphanedClick()) are taken before a uint16_t rollover<\/span><\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <span class="comment">\/\/ happens. In theory, these additional precautions would be needed even if<\/span><\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <span class="comment">\/\/ an &#39;unsigned long&#39; is used but almost no one does them because they<\/span><\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <span class="comment">\/\/ assume that their code won&#39;t be running continuously for the rollover<\/span><\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <span class="comment">\/\/ time of an &#39;unsigned long&#39; (i.e. 49.7 days).<\/span><\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a8fbe63588107a1375d05911d27df3ad8">   77<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a8fbe63588107a1375d05911d27df3ad8">kDebounceDelay<\/a> = 20;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a5691e38564dae63592d22abf74fb15f3">   80<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a5691e38564dae63592d22abf74fb15f3">kClickDelay<\/a> = 200;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#af0a0d503f3396acef6a84aca4390fd6a">   83<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#af0a0d503f3396acef6a84aca4390fd6a">kDoubleClickDelay<\/a> = 400;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a60bf588a2c067a561887eadf18cedccd">   86<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a60bf588a2c067a561887eadf18cedccd">kLongPressDelay<\/a> = 1000;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a3d20bc5800532085fd046fc64b80ae9f">   89<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a3d20bc5800532085fd046fc64b80ae9f">kRepeatPressDelay<\/a> = 1000;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a218c1aa09b45ea2fe6884e3af3a18310">   92<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a218c1aa09b45ea2fe6884e3af3a18310">kRepeatPressInterval<\/a> = 200;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    <span class="comment">\/\/ Various features controlled by feature flags.<\/span><\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a1c7c7bfc42738278330243dfc43f23eb">  101<\/a><\/span>&#160;    <span class="keyword">typedef<\/span> uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a1c7c7bfc42738278330243dfc43f23eb">FeatureFlagType<\/a>;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ac662555100416c4843c6ee5156699c56">  104<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#ac662555100416c4843c6ee5156699c56">kFeatureClick<\/a> = 0x01;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a638943c127dd60288a83e83260825d01">  111<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a638943c127dd60288a83e83260825d01">kFeatureDoubleClick<\/a> = 0x02;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a4d175560047a4ca245186fb26fa413f2">  114<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a4d175560047a4ca245186fb26fa413f2">kFeatureLongPress<\/a> = 0x04;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00117"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ac9b941ca87f0eeb899ed503481439c92">  117<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#ac9b941ca87f0eeb899ed503481439c92">kFeatureRepeatPress<\/a> = 0x08;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a57327066d135bcc99c4a68b55fca162e">  120<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a57327066d135bcc99c4a68b55fca162e">kFeatureSuppressAfterClick<\/a> = 0x10;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a7642e16b2cc8dd0136312054b1da8f9e">  127<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a7642e16b2cc8dd0136312054b1da8f9e">kFeatureSuppressAfterDoubleClick<\/a> = 0x20;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00130"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a15b8e90b1ffe01009a1d7dd18b5b6aae">  130<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a15b8e90b1ffe01009a1d7dd18b5b6aae">kFeatureSuppressAfterLongPress<\/a> = 0x40;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a6b43b591ba53d360e787bf780af0abbc">  133<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a6b43b591ba53d360e787bf780af0abbc">kFeatureSuppressAfterRepeatPress<\/a> = 0x80;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<\/div><div class="line"><a name="l00141"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a80d621dbcf533c9bb91a111b8fec2c53">  141<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#a80d621dbcf533c9bb91a111b8fec2c53">kFeatureSuppressClickBeforeDoubleClick<\/a> = 0x100;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#abfd736234ae852f22894c7aceb4e534e">  150<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> FeatureFlagType <a class="code" href="classace__button_1_1ButtonConfig.html#abfd736234ae852f22894c7aceb4e534e">kFeatureSuppressAll<\/a> =<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;        (kFeatureSuppressAfterClick |<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;        kFeatureSuppressAfterDoubleClick |<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;        kFeatureSuppressAfterLongPress |<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;        kFeatureSuppressAfterRepeatPress |<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;        <a class="code" href="classace__button_1_1ButtonConfig.html#a80d621dbcf533c9bb91a111b8fec2c53">kFeatureSuppressClickBeforeDoubleClick<\/a>);<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">  164<\/a><\/span>&#160;    <span class="keyword">typedef<\/span> void (*<a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">EventHandler<\/a>)(<a class="code" href="classace__button_1_1AceButton.html">AceButton<\/a>* button, uint8_t eventType,<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;        uint8_t buttonState);<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a66924aac157a81cc54a9776fb975893a">  168<\/a><\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html#a66924aac157a81cc54a9776fb975893a">ButtonConfig<\/a>() {}<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;    <span class="comment">\/\/ These configuration methods are virtual so that they can be overriddden.<\/span><\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;    <span class="comment">\/\/ Subclasses can override at the class-level by defining a new virtual<\/span><\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;    <span class="comment">\/\/ function in the subclass, or by defining an instance variable and storing<\/span><\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;    <span class="comment">\/\/ the parameter with each instance of this class.<\/span><\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00176"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ad7be58d0fe0b242f78f15319d201a565">  176<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#ad7be58d0fe0b242f78f15319d201a565">getDebounceDelay<\/a>() { <span class="keywordflow">return<\/span> mDebounceDelay; }<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a19db203ce87dc2cafb2cab6ba124387a">  179<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a19db203ce87dc2cafb2cab6ba124387a">getClickDelay<\/a>() { <span class="keywordflow">return<\/span> mClickDelay; }<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a5ba500367e03c36f39225a5858e110e6">  185<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a5ba500367e03c36f39225a5858e110e6">getDoubleClickDelay<\/a>() {<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;      <span class="keywordflow">return<\/span> mDoubleClickDelay;<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;    }<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a46d4213a827a94bf82ba99a9c2e59531">  190<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#a46d4213a827a94bf82ba99a9c2e59531">getLongPressDelay<\/a>() {<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;      <span class="keywordflow">return<\/span> mLongPressDelay;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;    }<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ad85c75d2a2dd200552a181fb154d5fd2">  200<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#ad85c75d2a2dd200552a181fb154d5fd2">getRepeatPressDelay<\/a>() {<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;      <span class="keywordflow">return<\/span> mRepeatPressDelay;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;    }<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aec4a97a1a1306b9ff12f1cdf44515c43">  207<\/a><\/span>&#160;    uint16_t <a class="code" href="classace__button_1_1ButtonConfig.html#aec4a97a1a1306b9ff12f1cdf44515c43">getRepeatPressInterval<\/a>() {<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;      <span class="keywordflow">return<\/span> mRepeatPressInterval;<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;    }<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;<\/div><div class="line"><a name="l00212"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a9860d2c8a6ab33d40ea126b02d168cab">  212<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a9860d2c8a6ab33d40ea126b02d168cab">setDebounceDelay<\/a>(uint16_t debounceDelay) {<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;      mDebounceDelay = debounceDelay;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;    }<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00217"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aef65e12128997c46bc2754a988b98f14">  217<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#aef65e12128997c46bc2754a988b98f14">setClickDelay<\/a>(uint16_t clickDelay) {<\/div><div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;      mClickDelay = clickDelay;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;    }<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;<\/div><div class="line"><a name="l00222"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a367a809017e1d633a5cf6b117981d579">  222<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a367a809017e1d633a5cf6b117981d579">setDoubleClickDelay<\/a>(uint16_t doubleClickDelay) {<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;      mDoubleClickDelay = doubleClickDelay;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;    }<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00227"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a7d90d39aeddacb5abc9d8741611d7c4a">  227<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a7d90d39aeddacb5abc9d8741611d7c4a">setLongPressDelay<\/a>(uint16_t longPressDelay) {<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;      mLongPressDelay = longPressDelay;<\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;    }<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;<\/div><div class="line"><a name="l00232"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#af813c969eddd884e9fa83b334a59a0a5">  232<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#af813c969eddd884e9fa83b334a59a0a5">setRepeatPressDelay<\/a>(uint16_t repeatPressDelay) {<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;      mRepeatPressDelay = repeatPressDelay;<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;    }<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aa1b1217e0042512fc8d9b6544536aed3">  237<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#aa1b1217e0042512fc8d9b6544536aed3">setRepeatPressInterval<\/a>(uint16_t repeatPressInterval) {<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;      mRepeatPressInterval = repeatPressInterval;<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;    }<\/div><div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;<\/div><div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;    <span class="comment">\/\/ The getClock() and readButton() are external dependencies that normally<\/span><\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;    <span class="comment">\/\/ would be injected using separate classes, but in the interest of saving<\/span><\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;    <span class="comment">\/\/ RAM in an embedded environment, we expose them in this class instead.<\/span><\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;<\/div><div class="line"><a name="l00250"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a440271e22d5e7e161cdcb3b73f092111">  250<\/a><\/span>&#160;    <span class="keyword">virtual<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a440271e22d5e7e161cdcb3b73f092111">getClock<\/a>() { <span class="keywordflow">return<\/span> millis(); }<\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a8a74d1a1c082bfb0e4ddf55e67d3ac2d">  256<\/a><\/span>&#160;    <span class="keyword">virtual<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a8a74d1a1c082bfb0e4ddf55e67d3ac2d">getClockMicros<\/a>() { <span class="keywordflow">return<\/span> micros(); }<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<\/div><div class="line"><a name="l00263"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a5dab877bf124bfdf5a5eb703ca123027">  263<\/a><\/span>&#160;    <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a5dab877bf124bfdf5a5eb703ca123027">readButton<\/a>(uint8_t pin) {<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;      <span class="keywordflow">return<\/span> digitalRead(pin);<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;    }<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;    <span class="comment">\/\/ These methods return the various feature flags that control the<\/span><\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;    <span class="comment">\/\/ functionality of the AceButton.<\/span><\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;<\/div><div class="line"><a name="l00271"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">  271<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#aae51c7a2986eafd400784cdbe6bb1815">isFeature<\/a>(FeatureFlagType features) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;      <span class="keywordflow">return<\/span> mFeatureFlags &amp; features;<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;    }<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;<\/div><div class="line"><a name="l00276"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aac1c9029b1cf9aa793060d372fc09a1a">  276<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#aac1c9029b1cf9aa793060d372fc09a1a">setFeature<\/a>(FeatureFlagType features) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;      mFeatureFlags |= features;<\/div><div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;    }<\/div><div class="line"><a name="l00279"><\/a><span class="lineno">  279<\/span>&#160;<\/div><div class="line"><a name="l00281"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ac782903e4a60924db3d17c00accc7f3b">  281<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#ac782903e4a60924db3d17c00accc7f3b">clearFeature<\/a>(FeatureFlagType features) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;      mFeatureFlags &amp;= ~features;<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;    }<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;<\/div><div class="line"><a name="l00285"><\/a><span class="lineno">  285<\/span>&#160;    <span class="comment">\/\/ EventHandler<\/span><\/div><div class="line"><a name="l00286"><\/a><span class="lineno">  286<\/span>&#160;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a8fc32804ba102f61ba97bcc5f4fe8448">  288<\/a><\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">EventHandler<\/a> <a class="code" href="classace__button_1_1ButtonConfig.html#a8fc32804ba102f61ba97bcc5f4fe8448">getEventHandler<\/a>() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;      <span class="keywordflow">return<\/span> mEventHandler;<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;    }<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a5d228f08e9943fd4ab90caab39ef80be">  296<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a5d228f08e9943fd4ab90caab39ef80be">setEventHandler<\/a>(<a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">EventHandler<\/a> eventHandler) ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;      mEventHandler = eventHandler;<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;    }<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;    <span class="comment">\/\/ TimingStats<\/span><\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;<\/div><div class="line"><a name="l00303"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a16d7dbbe1bb075018378e463cd8106de">  303<\/a><\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a16d7dbbe1bb075018378e463cd8106de">setTimingStats<\/a>(<a class="code" href="classace__button_1_1TimingStats.html">TimingStats<\/a>* timingStats) {<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;      mTimingStats = timingStats;<\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;    }<\/div><div class="line"><a name="l00306"><\/a><span class="lineno">  306<\/span>&#160;<\/div><div class="line"><a name="l00308"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#aff7101f2fe0f0c3bba67924b01e9d493">  308<\/a><\/span>&#160;    <a class="code" href="classace__button_1_1TimingStats.html">TimingStats<\/a>* <a class="code" href="classace__button_1_1ButtonConfig.html#aff7101f2fe0f0c3bba67924b01e9d493">getTimingStats<\/a>() { <span class="keywordflow">return<\/span> mTimingStats; }<\/div><div class="line"><a name="l00309"><\/a><span class="lineno">  309<\/span>&#160;<\/div><div class="line"><a name="l00314"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#ab780f081ef691b48deb5182d206a4b9d">  314<\/a><\/span>&#160;    <span class="keyword">static<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>* <a class="code" href="classace__button_1_1ButtonConfig.html#ab780f081ef691b48deb5182d206a4b9d">getSystemButtonConfig<\/a>() ACE_BUTTON_INLINE {<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;      <span class="keywordflow">return<\/span> &amp;sSystemButtonConfig;<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;    }<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;<\/div><div class="line"><a name="l00318"><\/a><span class="lineno">  318<\/span>&#160;  <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00323"><\/a><span class="lineno"><a class="line" href="classace__button_1_1ButtonConfig.html#a86f8f6b62825258e477e0a41846e0223">  323<\/a><\/span>&#160;    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html#a86f8f6b62825258e477e0a41846e0223">init<\/a>() {<\/div><div class="line"><a name="l00324"><\/a><span class="lineno">  324<\/span>&#160;      mFeatureFlags = 0;<\/div><div class="line"><a name="l00325"><\/a><span class="lineno">  325<\/span>&#160;      mTimingStats = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00326"><\/a><span class="lineno">  326<\/span>&#160;    }<\/div><div class="line"><a name="l00327"><\/a><span class="lineno">  327<\/span>&#160;<\/div><div class="line"><a name="l00328"><\/a><span class="lineno">  328<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;    <span class="keyword">static<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a> sSystemButtonConfig;<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;<\/div><div class="line"><a name="l00335"><\/a><span class="lineno">  335<\/span>&#160;    <span class="comment">\/\/ Disable copy-constructor and assignment operator<\/span><\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html#a66924aac157a81cc54a9776fb975893a">ButtonConfig<\/a>(<span class="keyword">const<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>&amp;) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>&amp; operator=(<span class="keyword">const<\/span> <a class="code" href="classace__button_1_1ButtonConfig.html">ButtonConfig<\/a>&amp;) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;    <a class="code" href="classace__button_1_1ButtonConfig.html#a6d9db3c7b221b474c3cfd8fca5f4ba1e">EventHandler<\/a> mEventHandler = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;    FeatureFlagType mFeatureFlags = 0;<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;    <a class="code" href="classace__button_1_1TimingStats.html">TimingStats<\/a>* mTimingStats = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00347"><\/a><span class="lineno">  347<\/span>&#160;<\/div><div class="line"><a name="l00348"><\/a><span class="lineno">  348<\/span>&#160;    uint16_t mDebounceDelay = <a class="code" href="classace__button_1_1ButtonConfig.html#a8fbe63588107a1375d05911d27df3ad8">kDebounceDelay<\/a>;<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;    uint16_t mClickDelay = <a class="code" href="classace__button_1_1ButtonConfig.html#a5691e38564dae63592d22abf74fb15f3">kClickDelay<\/a>;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;    uint16_t mDoubleClickDelay = <a class="code" href="classace__button_1_1ButtonConfig.html#af0a0d503f3396acef6a84aca4390fd6a">kDoubleClickDelay<\/a>;<\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;    uint16_t mLongPressDelay = <a class="code" href="classace__button_1_1ButtonConfig.html#a60bf588a2c067a561887eadf18cedccd">kLongPressDelay<\/a>;<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;    uint16_t mRepeatPressDelay = <a class="code" href="classace__button_1_1ButtonConfig.html#a3d20bc5800532085fd046fc64b80ae9f">kRepeatPressDelay<\/a>;<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;    uint16_t mRepeatPressInterval = <a class="code" href="classace__button_1_1ButtonConfig.html#a218c1aa09b45ea2fe6884e3af3a18310">kRepeatPressInterval<\/a>;<\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;};<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;}<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classace__button_1_1ButtonConfig_html_aec4a97a1a1306b9ff12f1cdf44515c43"><div class="ttname"><a href="classace__button_1_1ButtonConfig.html#aec4a97a1a1306b9ff12f1cdf44515c43">ace_button::ButtonConfig::getRepeatPressInterval<\/a><\/div><div class="ttdeci">uint16_t getRepeatPressInterval()<\/div><div class="ttdoc">Milliseconds between two successive RepeatPressed events. <\/div><div class="ttdef"><b>Definition:<\/b> <a href="ace__button_2ButtonConfig_8h_source.html#l00207">ButtonConfig.h:207<\/a><\/div><\/div>$/;"	a
lastAdvert	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^uint32_t lastAdvert; \/\/ track time for last advertisement$/;"	v
lastStatsPrintedTime	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^unsigned long lastStatsPrintedTime;$/;"	v
ledState	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^bool ledState;                  \/\/ current LED status$/;"	v
letter_a	../libraries/AceButton/docs/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_a"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;a&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_b	../libraries/AceButton/docs/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_b"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;b&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_t	../libraries/AceButton/docs/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classace__button_1_1AdjustableButtonConfig.html">AdjustableButtonConfig<\/a> (ace_button)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_t"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;t&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
loop	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void loop() {$/;"	f
loop	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^void loop() {$/;"	f
loop	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^void loop() $/;"	f
loop	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^void loop() $/;"	f
loop	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^void loop() $/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingViaSerial1/AdvancedSettingViaSerial1.ino	/^void loop()$/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutACK/AdvancedSettingWithoutACK.ino	/^void loop()$/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutReset/AdvancedSettingWithoutReset.ino	/^void loop()$/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/FullFunction/FullFunction.ino	/^void loop()$/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/GetStarted/GetStarted.ino	/^void loop()$/;"	f
loop	../libraries/DFRobotDFPlayerMini/examples/ReadValues/ReadValues.ino	/^void loop()$/;"	f
loop	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^void loop()$/;"	f
loop	../libraries/JC_Button/examples/SimpleOnOff/SimpleOnOff.ino	/^void loop()$/;"	f
loop	../libraries/JC_Button/examples/UpDown/UpDown.ino	/^void loop()$/;"	f
loop	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void loop () {$/;"	f
loop	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/DumpInfo/DumpInfo.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/Ntag216_AUTH/Ntag216_AUTH.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/firmware_check/firmware_check.ino	/^void loop() {} \/\/ nothing to do$/;"	f
loop	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/rfid_read_personal_data/rfid_read_personal_data.ino	/^void loop() {$/;"	f
loop	../libraries/MFRC522/examples/rfid_write_personal_data/rfid_write_personal_data.ino	/^void loop() {$/;"	f
loop	include/Mp3Player.h	/^void Mp3Player::loop() {$/;"	f	interface:
loop	tonuino.ino	/^void loop() {$/;"	f
loopClick	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopClick() {$/;"	f
loopDoubleClick	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopDoubleClick() {$/;"	f
loopEnd	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopEnd() {$/;"	f
loopEventType	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^uint8_t loopEventType;$/;"	v
loopIdle	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopIdle() {$/;"	f
loopLongPress	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopLongPress() {$/;"	f
loopMode	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^uint8_t loopMode;$/;"	v
loopPressRelease	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopPressRelease() {$/;"	f
loopStart	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void loopStart() {$/;"	f
mSensor	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^    CapacitiveSensor& mSensor;$/;"	m	class:CapacitiveConfig	file:
makeTree	../libraries/AceButton/docs/html/menu.js	/^  function makeTree(data,relPath) {$/;"	f	function:initMenu
masterCard	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^byte masterCard[4];   \/\/ Stores master card's ID read from EEPROM$/;"	v
mfrc522	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^MFRC522Hack mfrc522Hack(&mfrc522);  \/\/ Create MFRC522Hack instance.$/;"	v
mfrc522	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^MFRC522Hack mfrc522Hack(&mfrc522);  \/\/ Create MFRC522Hack instance.$/;"	v
mfrc522	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^MFRC522 mfrc522[NR_OF_READERS];   \/\/ Create MFRC522 instance.$/;"	v
monitorWipeButton	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^bool monitorWipeButton(uint32_t interval) {$/;"	f
ms	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^unsigned long ms;               \/\/ current time from millis()$/;"	v
msLast	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^unsigned long msLast;           \/\/ last time the LED was switched$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingViaSerial1/AdvancedSettingViaSerial1.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutACK/AdvancedSettingWithoutACK.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutReset/AdvancedSettingWithoutReset.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/FullFunction/FullFunction.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/GetStarted/GetStarted.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
myDFPlayer	../libraries/DFRobotDFPlayerMini/examples/ReadValues/ReadValues.ino	/^DFRobotDFPlayerMini myDFPlayer;$/;"	v
newUid	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^byte newUid[] = {0xDE, 0xAD, 0xBE, 0xEF};$/;"	v
nextMode	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void nextMode() {$/;"	f
nextTrack	include/Mp3Player.h	/^void Mp3Player::nextTrack() {$/;"	f	interface:
normalModeOn	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void normalModeOn () {$/;"	f
nuidPICC	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^byte nuidPICC[4];$/;"	v
outerLoopCounter	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^uint16_t outerLoopCounter = 0;$/;"	v
playTrack	include/Mp3Player.h	/^void Mp3Player::playTrack() {$/;"	f	interface:
presetButton1	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^AceButton presetButton1;$/;"	v
presetButton2	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^AceButton presetButton2;$/;"	v
presetButton3	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^AceButton presetButton3;$/;"	v
prevTrack	include/Mp3Player.h	/^void Mp3Player::prevTrack() {$/;"	f	interface:
printDec	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^void printDec(byte *buffer, byte bufferSize) {$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingViaSerial1/AdvancedSettingViaSerial1.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutACK/AdvancedSettingWithoutACK.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutReset/AdvancedSettingWithoutReset.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/FullFunction/FullFunction.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/GetStarted/GetStarted.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printDetail	../libraries/DFRobotDFPlayerMini/examples/ReadValues/ReadValues.ino	/^void printDetail(uint8_t type, int value){$/;"	f
printHex	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^void printHex(byte *buffer, byte bufferSize) {$/;"	f
printInt	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void printInt(uint16_t i) {$/;"	f
printStation	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void printStation(uint16_t frequency) {$/;"	f
printStats	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void printStats() {$/;"	f
pro-methods	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
programMode	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^bool programMode = false;  \/\/ initialize programming mode to false$/;"	v
pub-methods	../libraries/AceButton/docs/html/classace__button_1_1AceButton.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	../libraries/AceButton/docs/html/classace__button_1_1TimingStats.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-attribs	../libraries/AceButton/docs/html/classace__button_1_1AceButton.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-attribs	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-methods	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-types	../libraries/AceButton/docs/html/classace__button_1_1ButtonConfig.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
readCard	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^byte readCard[4];   \/\/ Stores scanned ID read from RFID Module$/;"	v
readCard	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void readCard() {$/;"	f
readCard	include/RfidReader.h	/^bool RfidReader::readCard(RfidCard *card) {$/;"	f	struct:RfidCard
readID	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void readID( uint8_t number ) {$/;"	f
redLed	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t redLed = 7;   \/\/ Set Led Pins$/;"	v
regVal	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^byte regVal = 0x7F;$/;"	v
relay	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t relay = 4;     \/\/ Set Relay Pin$/;"	v
reset	include/Counter.h	/^void Counter::reset() {$/;"	f	interface:
resetCard	include/RfidReader.h	/^bool RfidReader::resetCard(RfidCard *card) {$/;"	f	struct:RfidCard
retrievePreset	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void retrievePreset(uint8_t id) {$/;"	f
searchData	../libraries/AceButton/docs/html/search/all_0.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_1.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_2.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_3.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_4.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_5.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_6.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_7.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_8.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_9.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/all_a.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/classes_0.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/classes_1.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/classes_2.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_0.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_1.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_2.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_3.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_4.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_5.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_6.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/functions_7.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/pages_0.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/typedefs_0.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/typedefs_1.js	/^var searchData=$/;"	v
searchData	../libraries/AceButton/docs/html/search/variables_0.js	/^var searchData=$/;"	v
setClassAttr	../libraries/AceButton/docs/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setFolder	include/Mp3Player.h	/^inline void Mp3Player::setFolder(uint8_t folder) {$/;"	f	interface:
setKeyActions	../libraries/AceButton/docs/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setPreset	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void setPreset(uint8_t id) {$/;"	f
setVolume	include/Mp3Player.h	/^inline void Mp3Player::setVolume(uint8_t volume) {$/;"	f	interface:
setup	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/CapacitiveButton/CapacitiveButton.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth/ClickVersusDoubleClickUsingBoth.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased/ClickVersusDoubleClickUsingReleased.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression/ClickVersusDoubleClickUsingSuppression.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/HelloButton/HelloButton.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/LibrarySizeBenchmark/LibrarySizeBenchmark.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/SingleButton/SingleButton.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/SingleButtonPullDown/SingleButtonPullDown.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void setup() {$/;"	f
setup	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^void setup() {$/;"	f
setup	../libraries/DFPlayerMiniMp3/examples/PlayAdvertisements/PlayAdvertisements.ino	/^void setup() $/;"	f
setup	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^void setup() $/;"	f
setup	../libraries/DFPlayerMiniMp3/examples/PlayRandom/PlayRandom.ino	/^void setup() $/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingViaSerial1/AdvancedSettingViaSerial1.ino	/^void setup()$/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutACK/AdvancedSettingWithoutACK.ino	/^void setup()$/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutReset/AdvancedSettingWithoutReset.ino	/^void setup()$/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/FullFunction/FullFunction.ino	/^void setup()$/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/GetStarted/GetStarted.ino	/^void setup()$/;"	f
setup	../libraries/DFRobotDFPlayerMini/examples/ReadValues/ReadValues.ino	/^void setup()$/;"	f
setup	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^void setup()$/;"	f
setup	../libraries/JC_Button/examples/SimpleOnOff/SimpleOnOff.ino	/^void setup()$/;"	f
setup	../libraries/JC_Button/examples/UpDown/UpDown.ino	/^void setup()$/;"	f
setup	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/ChangeUID/ChangeUID.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/DumpInfo/DumpInfo.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/FixBrickedUID/FixBrickedUID.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/MifareClassicValueBlock/MifareClassicValueBlock.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/MinimalInterrupt/MinimalInterrupt.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/Ntag216_AUTH/Ntag216_AUTH.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/ReadAndWrite/ReadAndWrite.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/ReadNUID/ReadNUID.ino	/^void setup() { $/;"	f
setup	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/firmware_check/firmware_check.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/rfid_read_personal_data/rfid_read_personal_data.ino	/^void setup() {$/;"	f
setup	../libraries/MFRC522/examples/rfid_write_personal_data/rfid_write_personal_data.ino	/^void setup() {$/;"	f
setup	tonuino.ino	/^void setup() {$/;"	f
speak	misc/create-mp3-messages.sh	/^function speak {$/;"	f
ssPins	../libraries/MFRC522/examples/ReadUidMultiReader/ReadUidMultiReader.ino	/^byte ssPins[] = {SS_1_PIN, SS_2_PIN};$/;"	v
start	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^void start(){$/;"	f
startMillis	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^unsigned long startMillis = 0;$/;"	v
states_t	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^enum states_t {ONOFF, TO_BLINK, BLINK, TO_ONOFF};$/;"	g	file:
stations	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^uint16_t stations[NUM_PRESETS];$/;"	v
stats	../libraries/AceButton/examples/AutoBenchmark/AutoBenchmark.ino	/^TimingStats stats;$/;"	v
status	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^MFRC522::StatusCode status;$/;"	v
stopMillis	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^unsigned long stopMillis  = 0;$/;"	v
stopwatchState	../libraries/AceButton/examples/Stopwatch/Stopwatch.ino	/^uint8_t stopwatchState = STOPWATCH_INIT;$/;"	v
storedCard	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^byte storedCard[4];   \/\/ Stores an ID read from EEPROM$/;"	v
subdirs	../libraries/AceButton/docs/html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
successDelete	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void successDelete() {$/;"	f
successRead	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^uint8_t successRead;    \/\/ Variable integer to keep if we have Successful Read from Reader$/;"	v
successWrite	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void successWrite() {$/;"	f
switchLED	../libraries/JC_Button/examples/LongPress/LongPress.ino	/^void switchLED()$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(adjustable_config) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(button_state_unknown) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(click_with_suppression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(click_without_suppression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(clock_rollover) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(custom_id) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(double_click_not_suppressed) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(double_click_suppressed) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(feature_flags_off_by_default) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(init_while_pressed) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(init_while_released) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(long_press_with_supression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(long_press_without_suppression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(no_click_without_feature_flag) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(no_double_click_without_feature_flag) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(no_long_press_without_feature_flag) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(no_repeat_press_without_feature_flag) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(orphaned_click_causes_double_click_if_not_cleared) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(orphaned_click_cleared) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(orphaned_click_removed_if_click_enabled) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(pin) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(press_and_release_pulldown) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(press_and_release_pullup) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(repeat_press_with_suppression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(repeat_press_without_suppression) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(suppress_click_before_double_click) {$/;"	f
test	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^test(testable_config) {$/;"	f
testableConfig	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^AceButton button(&testableConfig);$/;"	v
testableConfig	../libraries/AceButton/tests/AceButtonTest/AceButtonTest.ino	/^TestableButtonConfig testableConfig;$/;"	v
toggleFolder	../libraries/AceButton/docs/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	../libraries/AceButton/docs/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	../libraries/AceButton/docs/html/dynsections.js	/^function toggleLevel(level)$/;"	f
togglePlayPause	include/Mp3Player.h	/^void Mp3Player::togglePlayPause() {$/;"	f	interface:
toggleSleepState	include/Mp3Player.h	/^void Mp3Player::toggleSleepState() {$/;"	f	interface:
toggleVisibility	../libraries/AceButton/docs/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
trigger	include/Counter.h	/^void Counter::trigger() {$/;"	f	interface:
try_key	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^bool try_key(MFRC522::MIFARE_Key *key)$/;"	f
try_key	../libraries/MFRC522/examples/rfid_default_keys/rfid_default_keys.ino	/^bool try_key(MFRC522::MIFARE_Key *key)$/;"	f
tuneConfig	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^AceButton tuneDownButton(&tuneConfig);$/;"	v
tuneConfig	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^AceButton tuneUpButton(&tuneConfig);$/;"	v
tuneConfig	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^ButtonConfig tuneConfig;$/;"	v
tuneDown	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void tuneDown() {$/;"	f
tuneUp	../libraries/AceButton/examples/TunerButtons/TunerButtons.ino	/^void tuneUp() {$/;"	f
updateStripes	../libraries/AceButton/docs/html/dynsections.js	/^function updateStripes()$/;"	f
version	include/RfidReader.h	/^    uint8_t version;    \/\/ 1 Byte$/;"	F	struct:RfidCard
waarde	../libraries/MFRC522/examples/RFIDCloner/RFIDCloner.ino	/^byte waarde[64][16];$/;"	v
waitMilliseconds	../libraries/DFPlayerMiniMp3/examples/PlayMp3/PlayMp3.ino	/^void waitMilliseconds(uint16_t msWait)$/;"	f
wipeB	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^constexpr uint8_t wipeB = 3;     \/\/ Button pin for WipeMode$/;"	v
writeCard	include/RfidReader.h	/^bool RfidReader::writeCard(RfidCard *card) {$/;"	f	struct:RfidCard
writeID	../libraries/MFRC522/examples/AccessControl/AccessControl.ino	/^void writeID( byte a[] ) {$/;"	f
